{
  "contractName": "TwoPartySwapApricot",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum TwoPartySwapApricot.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "AssetEscrowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum TwoPartySwapApricot.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "AssetRedeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum TwoPartySwapApricot.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "AssetRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "premiumAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum TwoPartySwapApricot.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "PremiumDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum TwoPartySwapApricot.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "PremiumRedeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hashLock",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "alice",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "bob",
          "type": "address"
        }
      ],
      "name": "SetUp",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "escrows",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "current",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeout",
          "type": "uint256"
        },
        {
          "internalType": "enum TwoPartySwapApricot.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "premiums",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "current",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "enum TwoPartySwapApricot.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "swaps",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "alice",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "bob",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hashLock",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "assetName",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expectedEscrowAlice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedPremiumBob",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "alice",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "bob",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetName",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hashLock",
          "type": "bytes32"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashLock",
          "type": "bytes32"
        }
      ],
      "name": "depositPremium",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashLock",
          "type": "bytes32"
        }
      ],
      "name": "escrowAsset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "hashLock",
          "type": "bytes32"
        }
      ],
      "name": "redeemAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "hashLock",
          "type": "bytes32"
        }
      ],
      "name": "refundAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hashLock",
          "type": "bytes32"
        }
      ],
      "name": "redeemPremium",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TwoPartySwapApricot.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"AssetEscrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TwoPartySwapApricot.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"AssetRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TwoPartySwapApricot.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"AssetRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premiumAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TwoPartySwapApricot.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"PremiumDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TwoPartySwapApricot.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"PremiumRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hashLock\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"alice\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"bob\",\"type\":\"address\"}],\"name\":\"SetUp\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashLock\",\"type\":\"bytes32\"}],\"name\":\"depositPremium\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashLock\",\"type\":\"bytes32\"}],\"name\":\"escrowAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"escrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"},{\"internalType\":\"enum TwoPartySwapApricot.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"premiums\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"enum TwoPartySwapApricot.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashLock\",\"type\":\"bytes32\"}],\"name\":\"redeemAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashLock\",\"type\":\"bytes32\"}],\"name\":\"redeemPremium\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashLock\",\"type\":\"bytes32\"}],\"name\":\"refundAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expectedEscrowAlice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedPremiumBob\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"alice\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"bob\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetName\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hashLock\",\"type\":\"bytes32\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"swaps\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"alice\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"bob\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hashLock\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"assetName\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"AssetEscrowed(uint256,uint256,uint8)\":{\"notice\":\"Once Alice escrows her asset, we want to check that she escrowed the correct amount.\"},\"AssetRedeemed(uint256,uint8)\":{\"notice\":\"If the swap succeeds, Bob will collect his asset.\"},\"AssetRefunded(uint256,uint8)\":{\"notice\":\"If the swap fails, Alice can get her asset back after the timout deadline.\"},\"PremiumDeposited(uint256,uint256,uint8)\":{\"notice\":\"Once Bob deposits his premium, we want to check that he deposited the correct amount.\"},\"PremiumRedeemed(uint256,uint8)\":{\"notice\":\"If the swap fails, Alice will redeem Bob's premium after the timout deadline.\"},\"SetUp(uint256,bytes32,address,address)\":{\"notice\":\"On setup, we need to know the hashlock and participants.\"}},\"kind\":\"user\",\"methods\":{\"swaps(bytes32)\":{\"notice\":\"Mappings that store our swap details.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ApricotSwap.sol\":\"TwoPartySwapApricot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ApricotSwap.sol\":{\"keccak256\":\"0x65610f1c737bde5b490feaa8ddde01c483a0c19255083e006f90b499c1343c75\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c3e2a3f6d1dd1fb43fbe92390d23305440682ed3b706482a26ff315640a5c283\",\"dweb:/ipfs/QmfDbjGzDxBa1PJD95odpqnR6E8gu4vU1QSGFZB3HedVnG\"]},\"project:/contracts/libraries/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x76a7b947a4945537a62ff94f9e42f07b0bfae270def881f1c227d16edd37d6d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aefa5432d0caa6111c1dfe2700a7455346005a17bce53ef2cf61a7c08e084eef\",\"dweb:/ipfs/QmefZErJ27q5yjHPwMfZ9dW3VhAEF1ASLnHfc4PNJoXFsr\"]},\"project:/contracts/libraries/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"project:/contracts/libraries/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"project:/contracts/libraries/token/ERC20/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611c82806100206000396000f3fe6080604052600436106100865760003560e01c806378a3113e1161005957806378a3113e1461012d578063b55587a91461016d578063d72a0a5314610196578063e8d8c29b146101bf578063eb84e7f2146101db57610086565b806310101e291461008b5780632d83549c146100b4578063584587ec146100f557806375a4208814610111575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906114c4565b61021b565b005b3480156100c057600080fd5b506100db60048036038101906100d69190611504565b610477565b6040516100ec9594939291906115c1565b60405180910390f35b61010f600480360381019061010a91906116dc565b6104ba565b005b61012b60048036038101906101269190611504565b610749565b005b34801561013957600080fd5b50610154600480360381019061014f9190611504565b610b3c565b6040516101649493929190611769565b60405180910390f35b34801561017957600080fd5b50610194600480360381019061018f9190611504565b610b79565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906114c4565b610d57565b005b6101d960048036038101906101d49190611504565b610fb3565b005b3480156101e757600080fd5b5061020260048036038101906101fd9190611504565b6113f9565b60405161021294939291906117db565b60405180910390f35b818160008082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028a57600080fd5b60016000828152602001908152602001600020600201544211156102ad57600080fd5b806002836040516020016102c19190611841565b6040516020818303038152906040526040516102dd91906118d6565b602060405180830381855afa1580156102fa573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061031d9190611902565b1461032757600080fd5b60008084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060008087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000888152602001908152602001600020600101546040518463ffffffff1660e01b81526004016103e49392919061198e565b602060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906119fd565b507fd14f64baeac22168708c8bfd7f42223951a95d68a8c70bc8fc4215e3ab8c7381426003604051610469929190611a2a565b60405180910390a150505050565b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b80600060048111156104cf576104ce61154a565b5b6001600083815260200190815260200160002060040160009054906101000a900460ff1660048111156105055761050461154a565b5b1461050f57600080fd5b600060048111156105235761052261154a565b5b6002600083815260200190815260200160002060030160009054906101000a900460ff1660048111156105595761055861154a565b5b1461056357600080fd5b81600080848152602001908152602001600020600201819055508260008084815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460008084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360008084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660016000848152602001908152602001600020600001819055506000600160008481526020019081526020016000206002018190555060006001600084815260200190815260200160002060030181905550856002600084815260200190815260200160002060000181905550600060026000848152602001908152602001600020600201819055507f5cdf8208bb7d74e44dbe0efe185239a77a93e52625729a164294c369ab4c53ed428387876040516107389493929190611a53565b60405180910390a150505050505050565b8060008082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b757600080fd5b600060048111156107cb576107ca61154a565b5b6002600083815260200190815260200160002060030160009054906101000a900460ff1660048111156108015761080061154a565b5b1461080b57600080fd5b600260008281526020019081526020016000206000015460008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108909190611a98565b60206040518083038186803b1580156108a857600080fd5b505afa1580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190611ac8565b10156108eb57600080fd5b6002600082815260200190815260200160002060020154421115610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90611b52565b60405180910390fd5b60008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060026000878152602001908152602001600020600001546040518463ffffffff1660e01b8152600401610a0193929190611b72565b602060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5391906119fd565b506002600083815260200190815260200160002060000154600260008481526020019081526020016000206001018190555060016002600084815260200190815260200160002060030160006101000a81548160ff02191690836004811115610abf57610abe61154a565b5b02179055507f9d3a90c48fdf7757ea9550cd81505cd44f6c168215c3f07369fe10fe586599094260026000858152602001908152602001600020600101546002600086815260200190815260200160002060030160009054906101000a900460ff16604051610b3093929190611ba9565b60405180910390a15050565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b8060008082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610be757600080fd5b60016000828152602001908152602001600020600301544211610c0957600080fd5b60008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060008086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000878152602001908152602001600020600101546040518463ffffffff1660e01b8152600401610cc69392919061198e565b602060405180830381600087803b158015610ce057600080fd5b505af1158015610cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1891906119fd565b507fcf5150d722eff59a5bfe502baa316afa64ccb8abfcc88aaad12ea36a9c9d9ad1426002604051610d4b929190611a2a565b60405180910390a15050565b818160008082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dc657600080fd5b6001600082815260200190815260200160002060020154421115610de957600080fd5b80600283604051602001610dfd9190611841565b604051602081830303815290604052604051610e1991906118d6565b602060405180830381855afa158015610e36573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610e599190611902565b14610e6357600080fd5b60008084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060008087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000888152602001908152602001600020600101546040518463ffffffff1660e01b8152600401610f209392919061198e565b602060405180830381600087803b158015610f3a57600080fd5b505af1158015610f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7291906119fd565b507fcf5150d722eff59a5bfe502baa316afa64ccb8abfcc88aaad12ea36a9c9d9ad1426002604051610fa5929190611a2a565b60405180910390a150505050565b8060008082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461102157600080fd5b600160048111156110355761103461154a565b5b6002600083815260200190815260200160002060030160009054906101000a900460ff16600481111561106b5761106a61154a565b5b1461107557600080fd5b600060048111156110895761108861154a565b5b6001600083815260200190815260200160002060040160009054906101000a900460ff1660048111156110bf576110be61154a565b5b146110c957600080fd5b600160008281526020019081526020016000206000015460008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161114e9190611a98565b60206040518083038186803b15801561116657600080fd5b505afa15801561117a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119e9190611ac8565b10156111a957600080fd5b6001600082815260200190815260200160002060020154421115611202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f990611c2c565b60405180910390fd5b60008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060016000878152602001908152602001600020600001546040518463ffffffff1660e01b81526004016112bf93929190611b72565b602060405180830381600087803b1580156112d957600080fd5b505af11580156112ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131191906119fd565b5060016000838152602001908152602001600020600001546001600084815260200190815260200160002060010181905550600180600084815260200190815260200160002060040160006101000a81548160ff0219169083600481111561137c5761137b61154a565b5b02179055507f608c9acc9595e184dff31bb4304c62ab7f110be96c4e6920a01b7497dff98c204260016000858152602001908152602001600020600101546001600086815260200190815260200160002060040160009054906101000a900460ff166040516113ed93929190611ba9565b60405180910390a15050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600080fd5b6000819050919050565b6114a18161148e565b81146114ac57600080fd5b50565b6000813590506114be81611498565b92915050565b600080604083850312156114db576114da611489565b5b60006114e9858286016114af565b92505060206114fa858286016114af565b9150509250929050565b60006020828403121561151a57611519611489565b5b6000611528848285016114af565b91505092915050565b6000819050919050565b61154481611531565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061158a5761158961154a565b5b50565b600081905061159b82611579565b919050565b60006115ab8261158d565b9050919050565b6115bb816115a0565b82525050565b600060a0820190506115d6600083018861153b565b6115e3602083018761153b565b6115f0604083018661153b565b6115fd606083018561153b565b61160a60808301846115b2565b9695505050505050565b61161d81611531565b811461162857600080fd5b50565b60008135905061163a81611614565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061166b82611640565b9050919050565b61167b81611660565b811461168657600080fd5b50565b60008135905061169881611672565b92915050565b60006116a982611640565b9050919050565b6116b98161169e565b81146116c457600080fd5b50565b6000813590506116d6816116b0565b92915050565b60008060008060008060c087890312156116f9576116f8611489565b5b600061170789828a0161162b565b965050602061171889828a0161162b565b955050604061172989828a01611689565b945050606061173a89828a01611689565b935050608061174b89828a016116c7565b92505060a061175c89828a016114af565b9150509295509295509295565b600060808201905061177e600083018761153b565b61178b602083018661153b565b611798604083018561153b565b6117a560608301846115b2565b95945050505050565b6117b781611660565b82525050565b6117c68161148e565b82525050565b6117d58161169e565b82525050565b60006080820190506117f060008301876117ae565b6117fd60208301866117ae565b61180a60408301856117bd565b61181760608301846117cc565b95945050505050565b6000819050919050565b61183b6118368261148e565b611820565b82525050565b600061184d828461182a565b60208201915081905092915050565b600081519050919050565b600081905092915050565b60005b83811015611890578082015181840152602081019050611875565b8381111561189f576000848401525b50505050565b60006118b08261185c565b6118ba8185611867565b93506118ca818560208601611872565b80840191505092915050565b60006118e282846118a5565b915081905092915050565b6000815190506118fc81611498565b92915050565b60006020828403121561191857611917611489565b5b6000611926848285016118ed565b91505092915050565b6000819050919050565b600061195461194f61194a84611640565b61192f565b611640565b9050919050565b600061196682611939565b9050919050565b60006119788261195b565b9050919050565b6119888161196d565b82525050565b60006060820190506119a360008301866117cc565b6119b0602083018561197f565b6119bd604083018461153b565b949350505050565b60008115159050919050565b6119da816119c5565b81146119e557600080fd5b50565b6000815190506119f7816119d1565b92915050565b600060208284031215611a1357611a12611489565b5b6000611a21848285016119e8565b91505092915050565b6000604082019050611a3f600083018561153b565b611a4c60208301846115b2565b9392505050565b6000608082019050611a68600083018761153b565b611a7560208301866117bd565b611a8260408301856117ae565b611a8f60608301846117ae565b95945050505050565b6000602082019050611aad60008301846117cc565b92915050565b600081519050611ac281611614565b92915050565b600060208284031215611ade57611add611489565b5b6000611aec84828501611ab3565b91505092915050565b600082825260208201905092915050565b7f646964206e6f7420657363726f77207072656d69756d20696e2074696d650000600082015250565b6000611b3c601e83611af5565b9150611b4782611b06565b602082019050919050565b60006020820190508181036000830152611b6b81611b2f565b9050919050565b6000606082019050611b87600083018661197f565b611b9460208301856117cc565b611ba1604083018461153b565b949350505050565b6000606082019050611bbe600083018661153b565b611bcb602083018561153b565b611bd860408301846115b2565b949350505050565b7f646964206e6f7420657363726f7720617373657420696e2074696d6500000000600082015250565b6000611c16601c83611af5565b9150611c2182611be0565b602082019050919050565b60006020820190508181036000830152611c4581611c09565b905091905056fea26469706673582212207a93de8bc11116a83ca9ec66cd1802d607b259300ca7891397e745a3732e2c3a64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c806378a3113e1161005957806378a3113e1461012d578063b55587a91461016d578063d72a0a5314610196578063e8d8c29b146101bf578063eb84e7f2146101db57610086565b806310101e291461008b5780632d83549c146100b4578063584587ec146100f557806375a4208814610111575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906114c4565b61021b565b005b3480156100c057600080fd5b506100db60048036038101906100d69190611504565b610477565b6040516100ec9594939291906115c1565b60405180910390f35b61010f600480360381019061010a91906116dc565b6104ba565b005b61012b60048036038101906101269190611504565b610749565b005b34801561013957600080fd5b50610154600480360381019061014f9190611504565b610b3c565b6040516101649493929190611769565b60405180910390f35b34801561017957600080fd5b50610194600480360381019061018f9190611504565b610b79565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906114c4565b610d57565b005b6101d960048036038101906101d49190611504565b610fb3565b005b3480156101e757600080fd5b5061020260048036038101906101fd9190611504565b6113f9565b60405161021294939291906117db565b60405180910390f35b818160008082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028a57600080fd5b60016000828152602001908152602001600020600201544211156102ad57600080fd5b806002836040516020016102c19190611841565b6040516020818303038152906040526040516102dd91906118d6565b602060405180830381855afa1580156102fa573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061031d9190611902565b1461032757600080fd5b60008084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060008087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000888152602001908152602001600020600101546040518463ffffffff1660e01b81526004016103e49392919061198e565b602060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906119fd565b507fd14f64baeac22168708c8bfd7f42223951a95d68a8c70bc8fc4215e3ab8c7381426003604051610469929190611a2a565b60405180910390a150505050565b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b80600060048111156104cf576104ce61154a565b5b6001600083815260200190815260200160002060040160009054906101000a900460ff1660048111156105055761050461154a565b5b1461050f57600080fd5b600060048111156105235761052261154a565b5b6002600083815260200190815260200160002060030160009054906101000a900460ff1660048111156105595761055861154a565b5b1461056357600080fd5b81600080848152602001908152602001600020600201819055508260008084815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460008084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360008084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660016000848152602001908152602001600020600001819055506000600160008481526020019081526020016000206002018190555060006001600084815260200190815260200160002060030181905550856002600084815260200190815260200160002060000181905550600060026000848152602001908152602001600020600201819055507f5cdf8208bb7d74e44dbe0efe185239a77a93e52625729a164294c369ab4c53ed428387876040516107389493929190611a53565b60405180910390a150505050505050565b8060008082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b757600080fd5b600060048111156107cb576107ca61154a565b5b6002600083815260200190815260200160002060030160009054906101000a900460ff1660048111156108015761080061154a565b5b1461080b57600080fd5b600260008281526020019081526020016000206000015460008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108909190611a98565b60206040518083038186803b1580156108a857600080fd5b505afa1580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190611ac8565b10156108eb57600080fd5b6002600082815260200190815260200160002060020154421115610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90611b52565b60405180910390fd5b60008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060026000878152602001908152602001600020600001546040518463ffffffff1660e01b8152600401610a0193929190611b72565b602060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5391906119fd565b506002600083815260200190815260200160002060000154600260008481526020019081526020016000206001018190555060016002600084815260200190815260200160002060030160006101000a81548160ff02191690836004811115610abf57610abe61154a565b5b02179055507f9d3a90c48fdf7757ea9550cd81505cd44f6c168215c3f07369fe10fe586599094260026000858152602001908152602001600020600101546002600086815260200190815260200160002060030160009054906101000a900460ff16604051610b3093929190611ba9565b60405180910390a15050565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b8060008082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610be757600080fd5b60016000828152602001908152602001600020600301544211610c0957600080fd5b60008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060008086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000878152602001908152602001600020600101546040518463ffffffff1660e01b8152600401610cc69392919061198e565b602060405180830381600087803b158015610ce057600080fd5b505af1158015610cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1891906119fd565b507fcf5150d722eff59a5bfe502baa316afa64ccb8abfcc88aaad12ea36a9c9d9ad1426002604051610d4b929190611a2a565b60405180910390a15050565b818160008082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dc657600080fd5b6001600082815260200190815260200160002060020154421115610de957600080fd5b80600283604051602001610dfd9190611841565b604051602081830303815290604052604051610e1991906118d6565b602060405180830381855afa158015610e36573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610e599190611902565b14610e6357600080fd5b60008084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060008087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000888152602001908152602001600020600101546040518463ffffffff1660e01b8152600401610f209392919061198e565b602060405180830381600087803b158015610f3a57600080fd5b505af1158015610f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7291906119fd565b507fcf5150d722eff59a5bfe502baa316afa64ccb8abfcc88aaad12ea36a9c9d9ad1426002604051610fa5929190611a2a565b60405180910390a150505050565b8060008082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461102157600080fd5b600160048111156110355761103461154a565b5b6002600083815260200190815260200160002060030160009054906101000a900460ff16600481111561106b5761106a61154a565b5b1461107557600080fd5b600060048111156110895761108861154a565b5b6001600083815260200190815260200160002060040160009054906101000a900460ff1660048111156110bf576110be61154a565b5b146110c957600080fd5b600160008281526020019081526020016000206000015460008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161114e9190611a98565b60206040518083038186803b15801561116657600080fd5b505afa15801561117a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119e9190611ac8565b10156111a957600080fd5b6001600082815260200190815260200160002060020154421115611202576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f990611c2c565b60405180910390fd5b60008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060016000878152602001908152602001600020600001546040518463ffffffff1660e01b81526004016112bf93929190611b72565b602060405180830381600087803b1580156112d957600080fd5b505af11580156112ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131191906119fd565b5060016000838152602001908152602001600020600001546001600084815260200190815260200160002060010181905550600180600084815260200190815260200160002060040160006101000a81548160ff0219169083600481111561137c5761137b61154a565b5b02179055507f608c9acc9595e184dff31bb4304c62ab7f110be96c4e6920a01b7497dff98c204260016000858152602001908152602001600020600101546001600086815260200190815260200160002060040160009054906101000a900460ff166040516113ed93929190611ba9565b60405180910390a15050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600080fd5b6000819050919050565b6114a18161148e565b81146114ac57600080fd5b50565b6000813590506114be81611498565b92915050565b600080604083850312156114db576114da611489565b5b60006114e9858286016114af565b92505060206114fa858286016114af565b9150509250929050565b60006020828403121561151a57611519611489565b5b6000611528848285016114af565b91505092915050565b6000819050919050565b61154481611531565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061158a5761158961154a565b5b50565b600081905061159b82611579565b919050565b60006115ab8261158d565b9050919050565b6115bb816115a0565b82525050565b600060a0820190506115d6600083018861153b565b6115e3602083018761153b565b6115f0604083018661153b565b6115fd606083018561153b565b61160a60808301846115b2565b9695505050505050565b61161d81611531565b811461162857600080fd5b50565b60008135905061163a81611614565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061166b82611640565b9050919050565b61167b81611660565b811461168657600080fd5b50565b60008135905061169881611672565b92915050565b60006116a982611640565b9050919050565b6116b98161169e565b81146116c457600080fd5b50565b6000813590506116d6816116b0565b92915050565b60008060008060008060c087890312156116f9576116f8611489565b5b600061170789828a0161162b565b965050602061171889828a0161162b565b955050604061172989828a01611689565b945050606061173a89828a01611689565b935050608061174b89828a016116c7565b92505060a061175c89828a016114af565b9150509295509295509295565b600060808201905061177e600083018761153b565b61178b602083018661153b565b611798604083018561153b565b6117a560608301846115b2565b95945050505050565b6117b781611660565b82525050565b6117c68161148e565b82525050565b6117d58161169e565b82525050565b60006080820190506117f060008301876117ae565b6117fd60208301866117ae565b61180a60408301856117bd565b61181760608301846117cc565b95945050505050565b6000819050919050565b61183b6118368261148e565b611820565b82525050565b600061184d828461182a565b60208201915081905092915050565b600081519050919050565b600081905092915050565b60005b83811015611890578082015181840152602081019050611875565b8381111561189f576000848401525b50505050565b60006118b08261185c565b6118ba8185611867565b93506118ca818560208601611872565b80840191505092915050565b60006118e282846118a5565b915081905092915050565b6000815190506118fc81611498565b92915050565b60006020828403121561191857611917611489565b5b6000611926848285016118ed565b91505092915050565b6000819050919050565b600061195461194f61194a84611640565b61192f565b611640565b9050919050565b600061196682611939565b9050919050565b60006119788261195b565b9050919050565b6119888161196d565b82525050565b60006060820190506119a360008301866117cc565b6119b0602083018561197f565b6119bd604083018461153b565b949350505050565b60008115159050919050565b6119da816119c5565b81146119e557600080fd5b50565b6000815190506119f7816119d1565b92915050565b600060208284031215611a1357611a12611489565b5b6000611a21848285016119e8565b91505092915050565b6000604082019050611a3f600083018561153b565b611a4c60208301846115b2565b9392505050565b6000608082019050611a68600083018761153b565b611a7560208301866117bd565b611a8260408301856117ae565b611a8f60608301846117ae565b95945050505050565b6000602082019050611aad60008301846117cc565b92915050565b600081519050611ac281611614565b92915050565b600060208284031215611ade57611add611489565b5b6000611aec84828501611ab3565b91505092915050565b600082825260208201905092915050565b7f646964206e6f7420657363726f77207072656d69756d20696e2074696d650000600082015250565b6000611b3c601e83611af5565b9150611b4782611b06565b602082019050919050565b60006020820190508181036000830152611b6b81611b2f565b9050919050565b6000606082019050611b87600083018661197f565b611b9460208301856117cc565b611ba1604083018461153b565b949350505050565b6000606082019050611bbe600083018661153b565b611bcb602083018561153b565b611bd860408301846115b2565b949350505050565b7f646964206e6f7420657363726f7720617373657420696e2074696d6500000000600082015250565b6000611c16601c83611af5565b9150611c2182611be0565b602082019050919050565b60006020820190508181036000830152611c4581611c09565b905091905056fea26469706673582212207a93de8bc11116a83ca9ec66cd1802d607b259300ca7891397e745a3732e2c3a64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15833:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:9"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:9",
                "type": ""
              }
            ],
            "src": "417:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:9"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:9",
                "type": ""
              }
            ],
            "src": "545:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "773:391:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "819:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "821:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "821:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "821:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "794:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "803:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "790:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "790:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "815:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "786:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "783:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "912:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "927:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "931:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "956:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "991:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1002:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "987:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "987:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1011:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "966:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "956:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1039:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1054:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1058:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1084:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1119:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1130:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1115:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1115:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1139:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1094:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1094:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1084:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "746:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "758:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "766:6:9",
                "type": ""
              }
            ],
            "src": "690:474:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1236:263:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1282:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1284:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1284:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1284:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1257:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1266:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1253:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1253:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1278:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1249:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1246:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1375:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1390:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1404:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1394:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1419:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1454:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1465:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1450:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1450:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1474:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1429:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1429:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1419:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1206:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1217:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1229:6:9",
                "type": ""
              }
            ],
            "src": "1170:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1550:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1560:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1571:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1560:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1532:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1542:7:9",
                "type": ""
              }
            ],
            "src": "1505:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1653:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1670:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1693:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1675:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1675:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1663:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1663:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1663:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1641:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1648:3:9",
                "type": ""
              }
            ],
            "src": "1588:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1740:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1757:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1760:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1750:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1750:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1854:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1857:4:9",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1847:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1847:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1878:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1881:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1871:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1871:15:9"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1712:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1950:62:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1984:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1986:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1986:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1986:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1973:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1980:1:9",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1970:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1970:12:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1963:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:20:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1960:46:9"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$560",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1943:5:9",
                "type": ""
              }
            ],
            "src": "1898:114:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2072:75:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2082:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2093:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2082:7:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2135:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$560",
                      "nodeType": "YulIdentifier",
                      "src": "2099:35:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:42:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2099:42:9"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$560",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2054:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2064:7:9",
                "type": ""
              }
            ],
            "src": "2018:129:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2220:62:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2230:46:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2270:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$560",
                      "nodeType": "YulIdentifier",
                      "src": "2243:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2243:33:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2230:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$560_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2200:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2210:9:9",
                "type": ""
              }
            ],
            "src": "2153:129:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2360:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2377:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2420:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$560_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2382:37:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2382:44:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2370:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:57:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2370:57:9"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$560_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2348:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2355:3:9",
                "type": ""
              }
            ],
            "src": "2288:145:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2656:461:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2666:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2678:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2689:3:9",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2674:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2674:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2666:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2747:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2760:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2771:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2756:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2756:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2703:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2703:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2828:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2841:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2852:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2837:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2837:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2784:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2784:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2784:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2910:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2923:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2934:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2919:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2919:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2866:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2866:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2866:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2992:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3005:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3016:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3001:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3001:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2948:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2948:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2948:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "3081:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3094:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3105:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3090:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3090:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$560_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3030:50:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3030:80:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3030:80:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_State_$560__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2596:9:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2608:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2616:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2624:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2632:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2640:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2651:4:9",
                "type": ""
              }
            ],
            "src": "2439:678:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3166:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3223:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3232:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3235:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3225:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3225:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3225:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3189:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3214:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3196:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3196:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3186:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3186:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3179:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3179:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3176:63:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3159:5:9",
                "type": ""
              }
            ],
            "src": "3123:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3303:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3313:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3335:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3322:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3322:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3313:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3378:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3351:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3351:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3351:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3281:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3289:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3297:5:9",
                "type": ""
              }
            ],
            "src": "3251:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3441:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3451:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3466:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3473:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3462:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3451:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3423:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3433:7:9",
                "type": ""
              }
            ],
            "src": "3396:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3581:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3591:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3620:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3602:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3602:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3591:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3563:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3573:7:9",
                "type": ""
              }
            ],
            "src": "3528:104:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3689:87:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3754:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3763:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3766:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3756:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3756:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3756:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3712:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3745:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "3719:25:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3719:32:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3709:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3709:43:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:51:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3699:71:9"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3682:5:9",
                "type": ""
              }
            ],
            "src": "3638:138:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3842:95:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3852:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3874:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3861:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3861:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3852:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3925:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "3890:34:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3890:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3890:41:9"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3820:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3828:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3836:5:9",
                "type": ""
              }
            ],
            "src": "3782:155:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3988:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3998:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4027:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4009:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3998:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3970:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3980:7:9",
                "type": ""
              }
            ],
            "src": "3943:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4088:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4145:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4154:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4157:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4147:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4147:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4147:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4111:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4136:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4118:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4118:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4108:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4108:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4101:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4101:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4098:63:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4081:5:9",
                "type": ""
              }
            ],
            "src": "4045:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4225:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4235:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4257:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4244:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4244:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4235:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4300:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4273:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4273:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4273:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4203:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4211:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4219:5:9",
                "type": ""
              }
            ],
            "src": "4173:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4485:922:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4532:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4534:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4534:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4534:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4506:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4515:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4502:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4502:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4527:3:9",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4498:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4498:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4495:120:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4625:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4640:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4654:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4644:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4669:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4704:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4715:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4700:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4700:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4724:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4679:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4679:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4669:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4752:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4767:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4781:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4771:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4797:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4832:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4843:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4828:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4828:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4852:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4807:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4807:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4797:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4880:126:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4895:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4909:2:9",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4899:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4925:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4968:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4979:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4964:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4964:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4988:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "4935:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4935:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4925:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5016:126:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5031:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5045:2:9",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5035:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5061:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5104:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5115:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5100:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5100:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5124:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "5071:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5071:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "5061:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5152:119:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5167:17:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5181:3:9",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5171:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5198:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5233:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5244:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5229:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5229:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5253:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5208:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5208:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "5198:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5281:119:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5296:17:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5310:3:9",
                        "type": "",
                        "value": "160"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5300:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5327:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5362:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5373:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5358:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5358:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5382:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5337:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5337:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "5327:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address_payablet_address_payablet_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4415:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4426:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4438:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4446:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4454:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4462:6:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4470:6:9",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4478:6:9",
                "type": ""
              }
            ],
            "src": "4318:1089:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5602:378:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5612:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5624:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5635:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5620:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5620:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5612:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5693:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5706:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5717:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5702:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5702:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5649:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5649:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5649:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5774:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5787:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5798:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5783:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5783:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5730:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5730:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5730:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5856:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5869:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5880:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5865:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5865:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5812:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5812:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5812:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5945:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5958:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5969:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5954:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5954:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$560_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5894:50:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5894:79:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5894:79:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_State_$560__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5550:9:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5562:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5570:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5578:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5586:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5597:4:9",
                "type": ""
              }
            ],
            "src": "5413:567:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6067:61:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6084:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6115:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "6089:25:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6089:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6077:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:45:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6077:45:9"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6055:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6062:3:9",
                "type": ""
              }
            ],
            "src": "5986:142:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6199:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6216:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6239:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "6221:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6221:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6209:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6209:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6209:37:9"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6187:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6194:3:9",
                "type": ""
              }
            ],
            "src": "6134:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6323:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6340:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6363:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6345:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6345:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6333:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6333:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6333:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6311:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6318:3:9",
                "type": ""
              }
            ],
            "src": "6258:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6596:403:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6606:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6618:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6629:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6614:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6614:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6606:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6703:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6716:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6727:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6712:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6712:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6643:59:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6643:87:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6643:87:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6800:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6813:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6824:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6809:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6809:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6740:59:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6740:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6740:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6882:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6895:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6906:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6891:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6891:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6838:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6838:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6838:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6964:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6977:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6988:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6973:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6973:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6920:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6920:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6920:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_payable_t_bytes32_t_address__to_t_address_payable_t_address_payable_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6544:9:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6556:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6564:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6572:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6580:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6591:4:9",
                "type": ""
              }
            ],
            "src": "6382:617:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7052:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7062:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7073:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7062:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7034:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7044:7:9",
                "type": ""
              }
            ],
            "src": "7005:79:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7173:74:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7190:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7233:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "7215:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7215:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "7195:19:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7195:45:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7183:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7183:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7183:58:9"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7161:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7168:3:9",
                "type": ""
              }
            ],
            "src": "7090:157:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7369:140:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7442:6:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7451:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7380:61:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7380:75:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7380:75:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7464:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7475:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7480:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7471:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7471:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7464:3:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7493:10:9",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7500:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7493:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7348:3:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7354:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7365:3:9",
                "type": ""
              }
            ],
            "src": "7253:256:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7573:40:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7584:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7600:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7594:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7594:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7584:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7556:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7566:6:9",
                "type": ""
              }
            ],
            "src": "7515:98:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7732:34:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7742:18:9",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7757:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7742:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7704:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7709:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7720:11:9",
                "type": ""
              }
            ],
            "src": "7619:147:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7821:258:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7831:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7840:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7835:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7900:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7925:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7930:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7921:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7921:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7944:3:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7949:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7940:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7940:11:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7934:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7934:18:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7914:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7914:39:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7914:39:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7861:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7864:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7858:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7858:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7872:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7874:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7883:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7886:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7879:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7879:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7874:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7854:3:9",
                    "statements": []
                  },
                  "src": "7850:113:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7997:76:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8047:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8052:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8043:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8043:16:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8061:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8036:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8036:27:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8036:27:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7978:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7981:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7975:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7975:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7972:101:9"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7803:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7808:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7813:6:9",
                "type": ""
              }
            ],
            "src": "7772:307:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8193:265:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8203:52:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8249:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "8217:31:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8217:38:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8207:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8264:95:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8347:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8352:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8271:75:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8271:88:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8264:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8394:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8401:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8390:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8390:16:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8408:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8413:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8368:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8368:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8368:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8429:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8440:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8445:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8436:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8436:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8429:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8174:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8181:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8189:3:9",
                "type": ""
              }
            ],
            "src": "8085:373:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8598:137:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8609:100:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8696:6:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8705:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8616:79:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8616:93:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8609:3:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8719:10:9",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8726:3:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8719:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8577:3:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8583:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8594:3:9",
                "type": ""
              }
            ],
            "src": "8464:271:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8804:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8814:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8829:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8823:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8823:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8814:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8872:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "8845:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8845:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8845:33:9"
                }
              ]
            },
            "name": "abi_decode_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8782:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8790:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8798:5:9",
                "type": ""
              }
            ],
            "src": "8741:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8967:274:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9013:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9015:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9015:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9015:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8988:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8997:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8984:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8984:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9009:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8980:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8980:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "8977:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9106:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9121:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9135:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9125:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9150:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9196:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9207:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9192:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9192:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9216:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9160:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9160:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9150:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8937:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8948:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8960:6:9",
                "type": ""
              }
            ],
            "src": "8890:351:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9279:28:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9289:12:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9296:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9289:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9265:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9275:3:9",
                "type": ""
              }
            ],
            "src": "9247:60:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9373:82:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9383:66:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9441:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "9423:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9423:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "9414:8:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9414:34:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9396:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9396:53:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9383:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9353:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9363:9:9",
                "type": ""
              }
            ],
            "src": "9313:142:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9521:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9531:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9575:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9544:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9544:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9531:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9501:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9511:9:9",
                "type": ""
              }
            ],
            "src": "9461:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9661:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9671:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9715:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "9684:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9684:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9671:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9641:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9651:9:9",
                "type": ""
              }
            ],
            "src": "9593:134:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9806:74:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9823:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9867:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9828:38:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9828:45:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9816:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9816:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9816:58:9"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9794:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9801:3:9",
                "type": ""
              }
            ],
            "src": "9733:147:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10048:296:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10058:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10070:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10081:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10066:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10066:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10058:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10138:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10151:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10162:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10147:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10147:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10094:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10094:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10094:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10227:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10240:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10251:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10236:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10236:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10175:51:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10175:80:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10175:80:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10309:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10322:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10333:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10318:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10318:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10265:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10265:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10265:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10004:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10016:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10024:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10032:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10043:4:9",
                "type": ""
              }
            ],
            "src": "9886:458:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10392:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10402:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10427:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10420:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10420:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10413:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10413:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10402:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10374:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10384:7:9",
                "type": ""
              }
            ],
            "src": "10350:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10486:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10540:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10549:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10552:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10542:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10542:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10542:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10509:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10531:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10516:14:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10516:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10506:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10506:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10499:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10499:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "10496:60:9"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10479:5:9",
                "type": ""
              }
            ],
            "src": "10446:116:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10628:77:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10638:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10653:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10647:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10647:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10638:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10693:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "10669:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10669:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10669:30:9"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10606:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10614:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10622:5:9",
                "type": ""
              }
            ],
            "src": "10568:137:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10785:271:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10831:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10833:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10833:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10833:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10806:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10815:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10802:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10802:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10827:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10798:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10798:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "10795:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10924:125:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10939:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10953:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10943:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10968:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11011:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11022:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11007:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11007:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11031:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10978:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10978:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10968:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10755:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10766:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10778:6:9",
                "type": ""
              }
            ],
            "src": "10711:345:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11195:213:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11205:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11217:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11228:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11213:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11213:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11205:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11285:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11298:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11309:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11294:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11294:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11241:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11241:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11241:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11373:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11386:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11397:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11382:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11382:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$560_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11322:50:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11322:79:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11322:79:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_enum$_State_$560__to_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11159:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11171:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11179:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11190:4:9",
                "type": ""
              }
            ],
            "src": "11062:346:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11628:403:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11638:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11650:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11661:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11646:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11646:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11638:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11719:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11732:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11743:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11728:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11728:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11675:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11675:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11675:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11800:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11813:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11824:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11809:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11809:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11756:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11756:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11756:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11898:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11911:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11922:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11907:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11907:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11838:59:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11838:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11838:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11996:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12009:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12020:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12005:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12005:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11936:59:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11936:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11936:88:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bytes32_t_address_payable_t_address_payable__to_t_uint256_t_bytes32_t_address_payable_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11576:9:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11588:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11596:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11604:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11612:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11623:4:9",
                "type": ""
              }
            ],
            "src": "11414:617:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12135:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12145:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12157:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12168:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12153:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12153:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12145:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12225:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12238:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12249:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12234:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12234:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12181:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12181:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12181:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12107:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12119:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12130:4:9",
                "type": ""
              }
            ],
            "src": "12037:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12328:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12338:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12353:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12347:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12347:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "12338:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12396:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12369:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12369:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12369:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "12306:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12314:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12322:5:9",
                "type": ""
              }
            ],
            "src": "12265:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12491:274:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12537:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "12539:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12539:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12539:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12512:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12521:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12508:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12508:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12533:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12504:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12504:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "12501:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12630:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12645:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12659:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12649:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12674:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12720:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12731:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12716:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12716:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12740:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12684:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12684:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12674:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12461:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12472:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12484:6:9",
                "type": ""
              }
            ],
            "src": "12414:351:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12867:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12884:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12889:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12877:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12877:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12877:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12905:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12924:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12929:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12920:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12920:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "12905:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12839:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12844:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "12855:11:9",
                "type": ""
              }
            ],
            "src": "12771:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13052:74:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13074:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13082:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13070:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13070:14:9"
                      },
                      {
                        "hexValue": "646964206e6f7420657363726f77207072656d69756d20696e2074696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13086:32:9",
                        "type": "",
                        "value": "did not escrow premium in time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13063:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13063:56:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13063:56:9"
                }
              ]
            },
            "name": "store_literal_in_memory_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13044:6:9",
                "type": ""
              }
            ],
            "src": "12946:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13278:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13288:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13354:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13359:2:9",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13295:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13295:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13288:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13460:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f",
                      "nodeType": "YulIdentifier",
                      "src": "13371:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13371:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13371:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13473:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13484:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13489:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13480:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13480:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13473:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13266:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13274:3:9",
                "type": ""
              }
            ],
            "src": "13132:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13675:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13685:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13697:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13708:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13693:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13693:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13685:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13732:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13743:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13728:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13728:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13751:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13757:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13747:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13747:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13721:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13721:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13721:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13777:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13911:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13785:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13785:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13777:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13655:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13670:4:9",
                "type": ""
              }
            ],
            "src": "13504:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14091:296:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14101:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14113:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14124:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14109:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14109:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14101:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14189:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14202:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14213:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14198:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14198:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14137:51:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14137:79:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14137:79:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14270:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14283:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14294:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14279:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14279:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14226:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14226:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14226:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14352:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14365:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14376:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14361:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14361:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14308:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14308:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14308:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14047:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14059:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14067:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14075:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14086:4:9",
                "type": ""
              }
            ],
            "src": "13929:458:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14554:295:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14564:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14576:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14587:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14572:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14572:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14564:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14644:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14657:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14668:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14653:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14653:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14600:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14600:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14600:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14725:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14738:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14749:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14734:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14734:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14681:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14681:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14681:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14814:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14827:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14838:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14823:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14823:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$560_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14763:50:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14763:79:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14763:79:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_enum$_State_$560__to_t_uint256_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14510:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14522:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14530:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14538:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14549:4:9",
                "type": ""
              }
            ],
            "src": "14393:456:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14961:72:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14983:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14991:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14979:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14979:14:9"
                      },
                      {
                        "hexValue": "646964206e6f7420657363726f7720617373657420696e2074696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14995:30:9",
                        "type": "",
                        "value": "did not escrow asset in time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14972:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14972:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14972:54:9"
                }
              ]
            },
            "name": "store_literal_in_memory_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14953:6:9",
                "type": ""
              }
            ],
            "src": "14855:178:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15185:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15195:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15261:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15266:2:9",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15202:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15202:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15195:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15367:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c",
                      "nodeType": "YulIdentifier",
                      "src": "15278:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15278:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15278:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15380:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15391:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15396:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15387:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15387:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15380:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15173:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15181:3:9",
                "type": ""
              }
            ],
            "src": "15039:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15582:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15592:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15604:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15615:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15600:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15600:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15592:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15639:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15650:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15635:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15635:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15658:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15664:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15654:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15654:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15628:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15628:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15628:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15684:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15818:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15692:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15692:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15684:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15562:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15577:4:9",
                "type": ""
              }
            ],
            "src": "15411:419:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$560(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$560(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$560(value)\n    }\n\n    function convert_t_enum$_State_$560_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$560(value)\n    }\n\n    function abi_encode_t_enum$_State_$560_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$560_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_State_$560__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_enum$_State_$560_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address_payablet_address_payablet_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_enum$_State_$560__to_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_State_$560_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_payable_t_bytes32_t_address__to_t_address_payable_t_address_payable_t_bytes32_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_State_$560__to_t_uint256_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_State_$560_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes32_t_address_payable_t_address_payable__to_t_uint256_t_bytes32_t_address_payable_t_address_payable__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f(memPtr) {\n\n        mstore(add(memPtr, 0), \"did not escrow premium in time\")\n\n    }\n\n    function abi_encode_t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_enum$_State_$560__to_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_State_$560_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c(memPtr) {\n\n        mstore(add(memPtr, 0), \"did not escrow asset in time\")\n\n    }\n\n    function abi_encode_t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "688:8282:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "688:8282:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8333:327;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1934:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;5808:990;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6978:492;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1981:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;8666:302;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8002:325;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7533:463;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1884:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;8333:327;8412:8;8422;5185:5;:15;5191:8;5185:15;;;;;;;;;;;:19;;;;;;;;;;;;5171:33;;:10;:33;;;5163:42;;;;;;5242:7;:17;5250:8;5242:17;;;;;;;;;;;:26;;;5223:15;:45;;5215:54;;;;;;5325:8;5287:34;5311:8;5294:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;5287:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;5279:55;;;;;;8448:5:::1;:15:::0;8454:8:::1;8448:15;;;;;;;;;;;:25;;;;;;;;;;;;8442:45;;;8496:4;8503:5;:15:::0;8509:8:::1;8503:15;;;;;;;;;;;:21;;;;;;;;;;;;8526:7;:17;8534:8;8526:17;;;;;;;;;;;:25;;;8442:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8568:85;8595:15;8624:19;8568:85;;;;;;;:::i;:::-;;;;;;;;8333:327:::0;;;;:::o;1934:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5808:990::-;6087:8;4182:11;4155:38;;;;;;;;:::i;:::-;;:7;:17;4163:8;4155:17;;;;;;;;;;;:23;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;4147:47;;;;;;4240:11;4212:39;;;;;;;;:::i;:::-;;:8;:18;4221:8;4212:18;;;;;;;;;;;:24;;;;;;;;;;;;:39;;;;;;;;:::i;:::-;;;4204:48;;;;;;6165:8:::1;6138:5;:15:::0;6144:8:::1;6138:15;;;;;;;;;;;:24;;:35;;;;6211:9;6183:5;:15:::0;6189:8:::1;6183:15;;;;;;;;;;;:25;;;:37;;;;;;;;;;;;;;;;;;6254:5;6230;:15:::0;6236:8:::1;6230:15;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;6291:3;6269:5;:15:::0;6275:8:::1;6269:15;;;;;;;;;;;:19;;;:25;;;;;;;;;;;;;;;;;;6366:19;6337:7;:17;6345:8;6337:17;;;;;;;;;;;:26;;:48;;;;6459:1;6430:7;:17;6438:8;6430:17;;;;;;;;;;;:26;;:30;;;;6498:1;6470:7;:17;6478:8;6470:17;;;;;;;;;;;:25;;:29;;;;6581:18;6551:8;:18;6560:8;6551:18;;;;;;;;;;;:27;;:48;;;;6672:1;6642:8;:18;6651:8;6642:18;;;;;;;;;;;:27;;:31;;;;6689:102;6708:15;6737:8;6759:5;6778:3;6689:102;;;;;;;;;:::i;:::-;;;;;;;;5808:990:::0;;;;;;;:::o;6978:492::-;7065:8;4353:5;:15;4359:8;4353:15;;;;;;;;;;;:19;;;;;;;;;;;;4339:33;;:10;:33;;;4331:42;;;;;;4419:11;4391:39;;;;;;;;:::i;:::-;;:8;:18;4400:8;4391:18;;;;;;;;;;;:24;;;;;;;;;;;;:39;;;;;;;;:::i;:::-;;;4383:48;;;;;;4507:8;:18;4516:8;4507:18;;;;;;;;;;;:27;;;4455:5;:15;4461:8;4455:15;;;;;;;;;;;:25;;;;;;;;;;;;4449:42;;;4492:10;4449:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;4441:94;;;;;;4572:8;:18;4581:8;4572:18;;;;;;;;;;;:27;;;4553:15;:46;;4545:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;7095:5:::1;:15:::0;7101:8:::1;7095:15;;;;;;;;;;;:25;;;;;;;;;;;;7089:45;;;7135:5;:15:::0;7141:8:::1;7135:15;;;;;;;;;;;:19;;;;;;;;;;;;7164:4;7171:8;:18;7180:8;7171:18;;;;;;;;;;;:27;;;7089:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7238:8;:18;7247:8;7238:18;;;;;;;;;;;:27;;;7209:8;:18;7218:8;7209:18;;;;;;;;;;;:26;;:56;;;;7302:12;7275:8;:18;7284:8;7275:18;;;;;;;;;;;:24;;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7330:133;7360:15;7389:8;:18;7398:8;7389:18;;;;;;;;;;;:26;;;7429:8;:18;7438:8;7429:18;;;;;;;;;;;:24;;;;;;;;;;;;7330:133;;;;;;;;:::i;:::-;;;;;;;;6978:492:::0;;:::o;1981:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8666:302::-;8731:8;5700:5;:15;5706:8;5700:15;;;;;;;;;;;:21;;;;;;;;;;;;5686:35;;:10;:35;;;5678:44;;;;;;5758:7;:17;5766:8;5758:17;;;;;;;;;;;:25;;;5740:15;:43;5732:52;;;;;;8756:5:::1;:15:::0;8762:8:::1;8756:15;;;;;;;;;;;:25;;;;;;;;;;;;8750:45;;;8804:4;8811:5;:15:::0;8817:8:::1;8811:15;;;;;;;;;;;:21;;;;;;;;;;;;8834:7;:17;8842:8;8834:17;;;;;;;;;;;:25;;;8750:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8876:85;8903:15;8932:19;8876:85;;;;;;;:::i;:::-;;;;;;;;8666:302:::0;;:::o;8002:325::-;8081:8;8091;5185:5;:15;5191:8;5185:15;;;;;;;;;;;:19;;;;;;;;;;;;5171:33;;:10;:33;;;5163:42;;;;;;5242:7;:17;5250:8;5242:17;;;;;;;;;;;:26;;;5223:15;:45;;5215:54;;;;;;5325:8;5287:34;5311:8;5294:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;5287:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;5279:55;;;;;;8117:5:::1;:15:::0;8123:8:::1;8117:15;;;;;;;;;;;:25;;;;;;;;;;;;8111:45;;;8165:4;8172:5;:15:::0;8178:8:::1;8172:15;;;;;;;;;;;:19;;;;;;;;;;;;8193:7;:17;8201:8;8193:17;;;;;;;;;;;:25;;;8111:108;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8235:85;8262:15;8291:19;8235:85;;;;;;;:::i;:::-;;;;;;;;8002:325:::0;;;;:::o;7533:463::-;7602:8;4732:5;:15;4738:8;4732:15;;;;;;;;;;;:21;;;;;;;;;;;;4718:35;;:10;:35;;;4710:44;;;;;;4800:12;4772:40;;;;;;;;:::i;:::-;;:8;:18;4781:8;4772:18;;;;;;;;;;;:24;;;;;;;;;;;;:40;;;;;;;;:::i;:::-;;;4764:49;;;;;;4858:11;4831:38;;;;;;;;:::i;:::-;;:7;:17;4839:8;4831:17;;;;;;;;;;;:23;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;4823:47;;;;;;4946:7;:17;4954:8;4946:17;;;;;;;;;;;:26;;;4894:5;:15;4900:8;4894:15;;;;;;;;;;;:25;;;;;;;;;;;;4888:42;;;4931:10;4888:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:84;;4880:93;;;;;;5010:7;:17;5018:8;5010:17;;;;;;;;;;;:26;;;4991:15;:45;;4983:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;7628:5:::1;:15:::0;7634:8:::1;7628:15;;;;;;;;;;;:25;;;;;;;;;;;;7622:45;;;7668:5;:15:::0;7674:8:::1;7668:15;;;;;;;;;;;:21;;;;;;;;;;;;7699:4;7706:7;:17;7714:8;7706:17;;;;;;;;;;;:26;;;7622:111;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7771:7;:17;7779:8;7771:17;;;;;;;;;;;:26;;;7743:7;:17;7751:8;7743:17;;;;;;;;;;;:25;;:54;;;;7833:12;7807:7:::0;:17:::1;7815:8;7807:17;;;;;;;;;;;:23;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7861:128;7888:15;7917:7;:17;7925:8;7917:17;;;;;;;;;;;:25;;;7956:7;:17;7964:8;7956:17;;;;;;;;;;;:23;;;;;;;;;;;;7861:128;;;;;;;;:::i;:::-;;;;;;;;7533:463:::0;;:::o;1884:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:329::-;1229:6;1278:2;1266:9;1257:7;1253:23;1249:32;1246:119;;;1284:79;;:::i;:::-;1246:119;1404:1;1429:53;1474:7;1465:6;1454:9;1450:22;1429:53;:::i;:::-;1419:63;;1375:117;1170:329;;;;:::o;1505:77::-;1542:7;1571:5;1560:16;;1505:77;;;:::o;1588:118::-;1675:24;1693:5;1675:24;:::i;:::-;1670:3;1663:37;1588:118;;:::o;1712:180::-;1760:77;1757:1;1750:88;1857:4;1854:1;1847:15;1881:4;1878:1;1871:15;1898:114;1980:1;1973:5;1970:12;1960:46;;1986:18;;:::i;:::-;1960:46;1898:114;:::o;2018:129::-;2064:7;2093:5;2082:16;;2099:42;2135:5;2099:42;:::i;:::-;2018:129;;;:::o;2153:::-;2210:9;2243:33;2270:5;2243:33;:::i;:::-;2230:46;;2153:129;;;:::o;2288:145::-;2382:44;2420:5;2382:44;:::i;:::-;2377:3;2370:57;2288:145;;:::o;2439:678::-;2651:4;2689:3;2678:9;2674:19;2666:27;;2703:71;2771:1;2760:9;2756:17;2747:6;2703:71;:::i;:::-;2784:72;2852:2;2841:9;2837:18;2828:6;2784:72;:::i;:::-;2866;2934:2;2923:9;2919:18;2910:6;2866:72;:::i;:::-;2948;3016:2;3005:9;3001:18;2992:6;2948:72;:::i;:::-;3030:80;3105:3;3094:9;3090:19;3081:6;3030:80;:::i;:::-;2439:678;;;;;;;;:::o;3123:122::-;3196:24;3214:5;3196:24;:::i;:::-;3189:5;3186:35;3176:63;;3235:1;3232;3225:12;3176:63;3123:122;:::o;3251:139::-;3297:5;3335:6;3322:20;3313:29;;3351:33;3378:5;3351:33;:::i;:::-;3251:139;;;;:::o;3396:126::-;3433:7;3473:42;3466:5;3462:54;3451:65;;3396:126;;;:::o;3528:104::-;3573:7;3602:24;3620:5;3602:24;:::i;:::-;3591:35;;3528:104;;;:::o;3638:138::-;3719:32;3745:5;3719:32;:::i;:::-;3712:5;3709:43;3699:71;;3766:1;3763;3756:12;3699:71;3638:138;:::o;3782:155::-;3836:5;3874:6;3861:20;3852:29;;3890:41;3925:5;3890:41;:::i;:::-;3782:155;;;;:::o;3943:96::-;3980:7;4009:24;4027:5;4009:24;:::i;:::-;3998:35;;3943:96;;;:::o;4045:122::-;4118:24;4136:5;4118:24;:::i;:::-;4111:5;4108:35;4098:63;;4157:1;4154;4147:12;4098:63;4045:122;:::o;4173:139::-;4219:5;4257:6;4244:20;4235:29;;4273:33;4300:5;4273:33;:::i;:::-;4173:139;;;;:::o;4318:1089::-;4438:6;4446;4454;4462;4470;4478;4527:3;4515:9;4506:7;4502:23;4498:33;4495:120;;;4534:79;;:::i;:::-;4495:120;4654:1;4679:53;4724:7;4715:6;4704:9;4700:22;4679:53;:::i;:::-;4669:63;;4625:117;4781:2;4807:53;4852:7;4843:6;4832:9;4828:22;4807:53;:::i;:::-;4797:63;;4752:118;4909:2;4935:61;4988:7;4979:6;4968:9;4964:22;4935:61;:::i;:::-;4925:71;;4880:126;5045:2;5071:61;5124:7;5115:6;5104:9;5100:22;5071:61;:::i;:::-;5061:71;;5016:126;5181:3;5208:53;5253:7;5244:6;5233:9;5229:22;5208:53;:::i;:::-;5198:63;;5152:119;5310:3;5337:53;5382:7;5373:6;5362:9;5358:22;5337:53;:::i;:::-;5327:63;;5281:119;4318:1089;;;;;;;;:::o;5413:567::-;5597:4;5635:3;5624:9;5620:19;5612:27;;5649:71;5717:1;5706:9;5702:17;5693:6;5649:71;:::i;:::-;5730:72;5798:2;5787:9;5783:18;5774:6;5730:72;:::i;:::-;5812;5880:2;5869:9;5865:18;5856:6;5812:72;:::i;:::-;5894:79;5969:2;5958:9;5954:18;5945:6;5894:79;:::i;:::-;5413:567;;;;;;;:::o;5986:142::-;6089:32;6115:5;6089:32;:::i;:::-;6084:3;6077:45;5986:142;;:::o;6134:118::-;6221:24;6239:5;6221:24;:::i;:::-;6216:3;6209:37;6134:118;;:::o;6258:::-;6345:24;6363:5;6345:24;:::i;:::-;6340:3;6333:37;6258:118;;:::o;6382:617::-;6591:4;6629:3;6618:9;6614:19;6606:27;;6643:87;6727:1;6716:9;6712:17;6703:6;6643:87;:::i;:::-;6740:88;6824:2;6813:9;6809:18;6800:6;6740:88;:::i;:::-;6838:72;6906:2;6895:9;6891:18;6882:6;6838:72;:::i;:::-;6920;6988:2;6977:9;6973:18;6964:6;6920:72;:::i;:::-;6382:617;;;;;;;:::o;7005:79::-;7044:7;7073:5;7062:16;;7005:79;;;:::o;7090:157::-;7195:45;7215:24;7233:5;7215:24;:::i;:::-;7195:45;:::i;:::-;7190:3;7183:58;7090:157;;:::o;7253:256::-;7365:3;7380:75;7451:3;7442:6;7380:75;:::i;:::-;7480:2;7475:3;7471:12;7464:19;;7500:3;7493:10;;7253:256;;;;:::o;7515:98::-;7566:6;7600:5;7594:12;7584:22;;7515:98;;;:::o;7619:147::-;7720:11;7757:3;7742:18;;7619:147;;;;:::o;7772:307::-;7840:1;7850:113;7864:6;7861:1;7858:13;7850:113;;;7949:1;7944:3;7940:11;7934:18;7930:1;7925:3;7921:11;7914:39;7886:2;7883:1;7879:10;7874:15;;7850:113;;;7981:6;7978:1;7975:13;7972:101;;;8061:1;8052:6;8047:3;8043:16;8036:27;7972:101;7821:258;7772:307;;;:::o;8085:373::-;8189:3;8217:38;8249:5;8217:38;:::i;:::-;8271:88;8352:6;8347:3;8271:88;:::i;:::-;8264:95;;8368:52;8413:6;8408:3;8401:4;8394:5;8390:16;8368:52;:::i;:::-;8445:6;8440:3;8436:16;8429:23;;8193:265;8085:373;;;;:::o;8464:271::-;8594:3;8616:93;8705:3;8696:6;8616:93;:::i;:::-;8609:100;;8726:3;8719:10;;8464:271;;;;:::o;8741:143::-;8798:5;8829:6;8823:13;8814:22;;8845:33;8872:5;8845:33;:::i;:::-;8741:143;;;;:::o;8890:351::-;8960:6;9009:2;8997:9;8988:7;8984:23;8980:32;8977:119;;;9015:79;;:::i;:::-;8977:119;9135:1;9160:64;9216:7;9207:6;9196:9;9192:22;9160:64;:::i;:::-;9150:74;;9106:128;8890:351;;;;:::o;9247:60::-;9275:3;9296:5;9289:12;;9247:60;;;:::o;9313:142::-;9363:9;9396:53;9414:34;9423:24;9441:5;9423:24;:::i;:::-;9414:34;:::i;:::-;9396:53;:::i;:::-;9383:66;;9313:142;;;:::o;9461:126::-;9511:9;9544:37;9575:5;9544:37;:::i;:::-;9531:50;;9461:126;;;:::o;9593:134::-;9651:9;9684:37;9715:5;9684:37;:::i;:::-;9671:50;;9593:134;;;:::o;9733:147::-;9828:45;9867:5;9828:45;:::i;:::-;9823:3;9816:58;9733:147;;:::o;9886:458::-;10043:4;10081:2;10070:9;10066:18;10058:26;;10094:71;10162:1;10151:9;10147:17;10138:6;10094:71;:::i;:::-;10175:80;10251:2;10240:9;10236:18;10227:6;10175:80;:::i;:::-;10265:72;10333:2;10322:9;10318:18;10309:6;10265:72;:::i;:::-;9886:458;;;;;;:::o;10350:90::-;10384:7;10427:5;10420:13;10413:21;10402:32;;10350:90;;;:::o;10446:116::-;10516:21;10531:5;10516:21;:::i;:::-;10509:5;10506:32;10496:60;;10552:1;10549;10542:12;10496:60;10446:116;:::o;10568:137::-;10622:5;10653:6;10647:13;10638:22;;10669:30;10693:5;10669:30;:::i;:::-;10568:137;;;;:::o;10711:345::-;10778:6;10827:2;10815:9;10806:7;10802:23;10798:32;10795:119;;;10833:79;;:::i;:::-;10795:119;10953:1;10978:61;11031:7;11022:6;11011:9;11007:22;10978:61;:::i;:::-;10968:71;;10924:125;10711:345;;;;:::o;11062:346::-;11190:4;11228:2;11217:9;11213:18;11205:26;;11241:71;11309:1;11298:9;11294:17;11285:6;11241:71;:::i;:::-;11322:79;11397:2;11386:9;11382:18;11373:6;11322:79;:::i;:::-;11062:346;;;;;:::o;11414:617::-;11623:4;11661:3;11650:9;11646:19;11638:27;;11675:71;11743:1;11732:9;11728:17;11719:6;11675:71;:::i;:::-;11756:72;11824:2;11813:9;11809:18;11800:6;11756:72;:::i;:::-;11838:88;11922:2;11911:9;11907:18;11898:6;11838:88;:::i;:::-;11936;12020:2;12009:9;12005:18;11996:6;11936:88;:::i;:::-;11414:617;;;;;;;:::o;12037:222::-;12130:4;12168:2;12157:9;12153:18;12145:26;;12181:71;12249:1;12238:9;12234:17;12225:6;12181:71;:::i;:::-;12037:222;;;;:::o;12265:143::-;12322:5;12353:6;12347:13;12338:22;;12369:33;12396:5;12369:33;:::i;:::-;12265:143;;;;:::o;12414:351::-;12484:6;12533:2;12521:9;12512:7;12508:23;12504:32;12501:119;;;12539:79;;:::i;:::-;12501:119;12659:1;12684:64;12740:7;12731:6;12720:9;12716:22;12684:64;:::i;:::-;12674:74;;12630:128;12414:351;;;;:::o;12771:169::-;12855:11;12889:6;12884:3;12877:19;12929:4;12924:3;12920:14;12905:29;;12771:169;;;;:::o;12946:180::-;13086:32;13082:1;13074:6;13070:14;13063:56;12946:180;:::o;13132:366::-;13274:3;13295:67;13359:2;13354:3;13295:67;:::i;:::-;13288:74;;13371:93;13460:3;13371:93;:::i;:::-;13489:2;13484:3;13480:12;13473:19;;13132:366;;;:::o;13504:419::-;13670:4;13708:2;13697:9;13693:18;13685:26;;13757:9;13751:4;13747:20;13743:1;13732:9;13728:17;13721:47;13785:131;13911:4;13785:131;:::i;:::-;13777:139;;13504:419;;;:::o;13929:458::-;14086:4;14124:2;14113:9;14109:18;14101:26;;14137:79;14213:1;14202:9;14198:17;14189:6;14137:79;:::i;:::-;14226:72;14294:2;14283:9;14279:18;14270:6;14226:72;:::i;:::-;14308;14376:2;14365:9;14361:18;14352:6;14308:72;:::i;:::-;13929:458;;;;;;:::o;14393:456::-;14549:4;14587:2;14576:9;14572:18;14564:26;;14600:71;14668:1;14657:9;14653:17;14644:6;14600:71;:::i;:::-;14681:72;14749:2;14738:9;14734:18;14725:6;14681:72;:::i;:::-;14763:79;14838:2;14827:9;14823:18;14814:6;14763:79;:::i;:::-;14393:456;;;;;;:::o;14855:178::-;14995:30;14991:1;14983:6;14979:14;14972:54;14855:178;:::o;15039:366::-;15181:3;15202:67;15266:2;15261:3;15202:67;:::i;:::-;15195:74;;15278:93;15367:3;15278:93;:::i;:::-;15396:2;15391:3;15387:12;15380:19;;15039:366;;;:::o;15411:419::-;15577:4;15615:2;15604:9;15600:18;15592:26;;15664:9;15658:4;15654:20;15650:1;15639:9;15635:17;15628:47;15692:131;15818:4;15692:131;:::i;:::-;15684:139;;15411:419;;;:::o",
  "source": "// Some functions based off of fair-atomic-swap/src/atomicswap/eip2266/ERC2266Swap.sol\n// Copyright (c) 2019 Chris Haoyu LIN, Runchao HAN, Jiangshan YU\n// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"./libraries/token/ERC20/ERC20.sol\";\n\n//TODO: use SafeMath\n//TODO: this follows the ordering of the diagram given in the paper. It does NOT allow for Bob to\n// start the swap on the Apricot Chain. We need to make it work two ways.\n\n//TODO: get Monitoring directory back on\n\n//TODO: add state to everything\n\n//How does correctness of policy depend on Delta?\n//Save Delta as Constant and then we can toy with it\n\n//Generate different tracelogs for different deltas\n\ncontract TwoPartySwapApricot {\n\n    //TODO: emit State in final events\n    //Monitor won't go into details of contract being refuned. These enums will act as flags. \n    //These signify that something happened. Variable are all flags \n\n    //TODO: get something that logs files\n    enum State { Empty, Filled, AssetRedeemed, AssetRefunded, PremiumRefunded}\n\n    /**\n     * The ApricotSwap struct keeps track of participants and swap details\n     */\n    struct ApricotSwap {\n        //participants\n        address payable alice;\n        address payable bob;\n        bytes32 hashLock;\n        address assetName;\n    }\n\n    /**\n     * The Escrow struct keeps track of the escrowed Asset\n     */\n    struct Escrow {\n        //type of asset \n        uint expected;\n        uint current;\n        //the deadline is for escrowing \n        uint deadline;\n        //the timeout is for redeeming\n        uint timeout;\n        State state;\n    }\n    /**\n     * The Premium struct keeps track of the deposited premium.\n     */\n    struct Premium {\n        uint expected;\n        uint current;\n        uint deadline;\n        State state;\n    }\n\n    /**\n     * Mappings that store our swap details.\n     */\n    mapping(bytes32 => ApricotSwap) public swaps;\n    mapping(bytes32 => Escrow) public escrows;\n    mapping (bytes32 => Premium) public premiums;\n\n    //If all goes well, this contract will emit:\n    // 1) SetUp (call made by Alice)\n    // 2) PremiumDeposited (call made by Bob)\n    // 3) AssetEscrowed (call made by Alice)\n    // 4) AssetRedeemed (call made by Bob)\n\n    //Say that Alice never escrows her Apricots. This contract will emit:\n    // 1) SetUp (call made by Alice)\n    // 2) PremiumDeposited (call made by Bob)\n    // Bob will then collect Alice's premium on the Banana Blockchain, which is premiumAlice + premiumBob\n\n    //Now, say that Bob never sends the preimage of the hashlock. This contract will emit:\n    // 1) SetUp (call made by Alice)\n    // 2) PremiumDeposited (call made by Bob)\n    // 3) AssetEscrowed (call made by Alice)\n    // 4) AssetRefunded (call made by Alice)\n    // 5) PremiumRedeemed (call made by Alice)\n    // Alice gets her asset back AS WELL AS Bob's premium. She also needs to get her premium refunded on the Banana chain\n\n    /**\n     * On setup, we need to know the hashlock and participants.\n     */\n    event SetUp(\n        uint timestamp,\n        bytes32 hashLock,\n        address payable alice,\n        address payable bob\n    );\n\n    /**\n     * Once Bob deposits his premium, we want to check that he deposited the correct amount.\n     */\n    event PremiumDeposited(\n        uint timestamp,\n        uint premiumAmount,\n        State state\n    );\n\n    /**\n     * Once Alice escrows her asset, we want to check that she escrowed the correct amount.\n     */\n    event AssetEscrowed (\n        uint timestamp,\n        uint assetAmount,\n        State state\n    );\n\n    /**\n     * If the swap succeeds, Bob will collect his asset.\n     */\n    event AssetRedeemed(\n        uint timestamp,\n        State state\n    );\n\n    /**\n     * If the swap fails, Alice will redeem Bob's premium after the timout deadline.\n     */\n    event PremiumRedeemed(\n        uint timestamp,\n        State state\n    );\n\n    /**\n     * If the swap fails, Alice can get her asset back after the timout deadline.\n     */\n    event AssetRefunded(\n        uint timestamp,\n        State state\n    );\n\n \n    modifier canSetup(bytes32 hashLock) {\n        require(escrows[hashLock].state == State.Empty);\n        require(premiums[hashLock].state == State.Empty);\n        _;\n    }\n\n    modifier canDepositPremium(bytes32 hashLock) {\n        require(msg.sender == swaps[hashLock].bob);\n        require(premiums[hashLock].state == State.Empty);\n        require(ERC20(swaps[hashLock].assetName).balanceOf(msg.sender) >= premiums[hashLock].expected);\n        require(block.timestamp <= premiums[hashLock].deadline, \"did not escrow premium in time\");\n        _;\n    }\n\n    modifier canEscrowAsset(bytes32 hashLock) {\n        require(msg.sender == swaps[hashLock].alice);\n        require(premiums[hashLock].state == State.Filled);\n        require(escrows[hashLock].state == State.Empty);\n        require(ERC20(swaps[hashLock].assetName).balanceOf(msg.sender) >= escrows[hashLock].expected);\n        require(block.timestamp <= escrows[hashLock].deadline, \"did not escrow asset in time\");\n        _;\n    }\n\n    modifier canRedeemAsset(bytes32 preimage, bytes32 hashLock) {\n        require(msg.sender == swaps[hashLock].bob);\n        require(block.timestamp <= escrows[hashLock].deadline);\n        require(sha256(abi.encodePacked(preimage)) == hashLock);\n        _;\n    }\n\n    modifier canRefundAsset(bytes32 preimage, bytes32 hashLock) {\n        require(msg.sender == swaps[hashLock].alice);\n        require(sha256(abi.encodePacked(preimage)) == hashLock);\n        require(block.timestamp > escrows[hashLock].timeout);\n        _;\n    }\n\n\n    modifier canRedeemPremium(bytes32 hashLock) {\n        require(msg.sender == swaps[hashLock].alice);\n        require(block.timestamp > escrows[hashLock].timeout);\n        _;\n    }\n\n    function setup(uint expectedEscrowAlice,\n                    uint expectedPremiumBob,\n                    address payable alice,\n                    address payable bob,\n                    address assetName,\n                    bytes32 hashLock)\n        public payable canSetup(hashLock) {\n\n        //set up swap mapping\n        swaps[hashLock].hashLock = hashLock;\n        swaps[hashLock].assetName = assetName;\n        swaps[hashLock].alice = alice;\n        swaps[hashLock].bob = bob;\n\n        //set up escrow mapping\n        escrows[hashLock].expected = expectedEscrowAlice;\n        //TODO: set these timeouts\n        escrows[hashLock].deadline = 0;\n        escrows[hashLock].timeout = 0;\n        \n        //set up premium mapping\n        premiums[hashLock].expected = expectedPremiumBob;\n        //TODO: set this timeout\n        premiums[hashLock].deadline = 0;\n\n        emit SetUp(\n            block.timestamp,\n            hashLock,\n            alice,\n            bob\n        );\n    }\n\n    // From source: will also need to call tokenB.approve(this_contract_address, premiumAmount) in advance\n    // removed parameter because unused: uint256 premiumRefundTime\n    function depositPremium(bytes32 hashLock)\n    public\n    payable\n    canDepositPremium(hashLock)\n    {\n        ERC20(swaps[hashLock].assetName).transferFrom(swaps[hashLock].bob, address(this), premiums[hashLock].expected);\n        premiums[hashLock].current = premiums[hashLock].expected;\n        premiums[hashLock].state = State.Filled;\n\n        emit PremiumDeposited(\n            block.timestamp,\n            premiums[hashLock].current,\n            premiums[hashLock].state\n        );\n    }\n\n    // removed parameter because unused: uint refundTime\n    function escrowAsset(bytes32 hashLock) public payable canEscrowAsset(hashLock) {\n        ERC20(swaps[hashLock].assetName).transferFrom(swaps[hashLock].alice, address(this), escrows[hashLock].expected);\n        escrows[hashLock].current = escrows[hashLock].expected;\n        escrows[hashLock].state = State.Filled;\n\n        emit AssetEscrowed(\n            block.timestamp,\n            escrows[hashLock].current,\n            escrows[hashLock].state\n        );\n    }\n\n    function redeemAsset(bytes32 preimage, bytes32 hashLock) public canRedeemAsset(preimage, hashLock) {\n        ERC20(swaps[hashLock].assetName).transferFrom(address(this), swaps[hashLock].bob, escrows[hashLock].current);\n\n        emit AssetRedeemed(\n            block.timestamp,\n            State.AssetRedeemed\n        );\n    }\n\n    function refundAsset(bytes32 preimage, bytes32 hashLock) public canRedeemAsset(preimage, hashLock) {\n        ERC20(swaps[hashLock].assetName).transferFrom(address(this), swaps[hashLock].alice, escrows[hashLock].current);\n\n        emit AssetRefunded(\n            block.timestamp,\n            State.AssetRefunded\n        );\n    }\n\n    function redeemPremium(bytes32 hashLock) public canRedeemPremium(hashLock){\n        ERC20(swaps[hashLock].assetName).transferFrom(address(this), swaps[hashLock].alice, escrows[hashLock].current);\n\n        emit AssetRedeemed(\n            block.timestamp,\n            State.AssetRedeemed\n        );\n    }\n}",
  "sourcePath": "/Users/parker/Brown/two_party_swap/contracts/ApricotSwap.sol",
  "ast": {
    "absolutePath": "project:/contracts/ApricotSwap.sol",
    "exportedSymbols": {
      "Context": [
        3183
      ],
      "ERC20": [
        3058
      ],
      "IERC20": [
        3136
      ],
      "IERC20Metadata": [
        3161
      ],
      "TwoPartySwapApricot": [
        1242
      ]
    },
    "id": 1243,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 553,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "192:23:1"
      },
      {
        "absolutePath": "project:/contracts/libraries/token/ERC20/ERC20.sol",
        "file": "./libraries/token/ERC20/ERC20.sol",
        "id": 554,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 3059,
        "src": "217:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TwoPartySwapApricot",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1242,
        "linearizedBaseContracts": [
          1242
        ],
        "name": "TwoPartySwapApricot",
        "nameLocation": "697:19:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TwoPartySwapApricot.State",
            "id": 560,
            "members": [
              {
                "id": 555,
                "name": "Empty",
                "nameLocation": "983:5:1",
                "nodeType": "EnumValue",
                "src": "983:5:1"
              },
              {
                "id": 556,
                "name": "Filled",
                "nameLocation": "990:6:1",
                "nodeType": "EnumValue",
                "src": "990:6:1"
              },
              {
                "id": 557,
                "name": "AssetRedeemed",
                "nameLocation": "998:13:1",
                "nodeType": "EnumValue",
                "src": "998:13:1"
              },
              {
                "id": 558,
                "name": "AssetRefunded",
                "nameLocation": "1013:13:1",
                "nodeType": "EnumValue",
                "src": "1013:13:1"
              },
              {
                "id": 559,
                "name": "PremiumRefunded",
                "nameLocation": "1028:15:1",
                "nodeType": "EnumValue",
                "src": "1028:15:1"
              }
            ],
            "name": "State",
            "nameLocation": "975:5:1",
            "nodeType": "EnumDefinition",
            "src": "970:74:1"
          },
          {
            "canonicalName": "TwoPartySwapApricot.ApricotSwap",
            "id": 569,
            "members": [
              {
                "constant": false,
                "id": 562,
                "mutability": "mutable",
                "name": "alice",
                "nameLocation": "1209:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 569,
                "src": "1193:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 561,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 564,
                "mutability": "mutable",
                "name": "bob",
                "nameLocation": "1240:3:1",
                "nodeType": "VariableDeclaration",
                "scope": 569,
                "src": "1224:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 563,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1224:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 566,
                "mutability": "mutable",
                "name": "hashLock",
                "nameLocation": "1261:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 569,
                "src": "1253:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 565,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1253:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 568,
                "mutability": "mutable",
                "name": "assetName",
                "nameLocation": "1287:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 569,
                "src": "1279:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 567,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1279:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ApricotSwap",
            "nameLocation": "1148:11:1",
            "nodeType": "StructDefinition",
            "scope": 1242,
            "src": "1141:162:1",
            "visibility": "public"
          },
          {
            "canonicalName": "TwoPartySwapApricot.Escrow",
            "id": 581,
            "members": [
              {
                "constant": false,
                "id": 571,
                "mutability": "mutable",
                "name": "expected",
                "nameLocation": "1438:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1433:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 570,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1433:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 573,
                "mutability": "mutable",
                "name": "current",
                "nameLocation": "1461:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1456:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 572,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1456:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 575,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "1524:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1519:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 574,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1519:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 577,
                "mutability": "mutable",
                "name": "timeout",
                "nameLocation": "1586:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1581:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 576,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1581:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 580,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "1609:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1603:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$560",
                  "typeString": "enum TwoPartySwapApricot.State"
                },
                "typeName": {
                  "id": 579,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 578,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 560,
                    "src": "1603:5:1"
                  },
                  "referencedDeclaration": 560,
                  "src": "1603:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Escrow",
            "nameLocation": "1391:6:1",
            "nodeType": "StructDefinition",
            "scope": 1242,
            "src": "1384:237:1",
            "visibility": "public"
          },
          {
            "canonicalName": "TwoPartySwapApricot.Premium",
            "id": 591,
            "members": [
              {
                "constant": false,
                "id": 583,
                "mutability": "mutable",
                "name": "expected",
                "nameLocation": "1736:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "1731:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 582,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1731:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 585,
                "mutability": "mutable",
                "name": "current",
                "nameLocation": "1759:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "1754:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 584,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1754:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 587,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "1781:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "1776:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 586,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1776:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 590,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "1805:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "1799:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$560",
                  "typeString": "enum TwoPartySwapApricot.State"
                },
                "typeName": {
                  "id": 589,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 588,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 560,
                    "src": "1799:5:1"
                  },
                  "referencedDeclaration": 560,
                  "src": "1799:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Premium",
            "nameLocation": "1713:7:1",
            "nodeType": "StructDefinition",
            "scope": 1242,
            "src": "1706:111:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 592,
              "nodeType": "StructuredDocumentation",
              "src": "1823:56:1",
              "text": " Mappings that store our swap details."
            },
            "functionSelector": "eb84e7f2",
            "id": 597,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "1923:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1884:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap)"
            },
            "typeName": {
              "id": 596,
              "keyType": {
                "id": 593,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1892:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1884:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap)"
              },
              "valueType": {
                "id": 595,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 594,
                  "name": "ApricotSwap",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 569,
                  "src": "1903:11:1"
                },
                "referencedDeclaration": 569,
                "src": "1903:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ApricotSwap_$569_storage_ptr",
                  "typeString": "struct TwoPartySwapApricot.ApricotSwap"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d83549c",
            "id": 602,
            "mutability": "mutable",
            "name": "escrows",
            "nameLocation": "1968:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1934:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow)"
            },
            "typeName": {
              "id": 601,
              "keyType": {
                "id": 598,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1942:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1934:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow)"
              },
              "valueType": {
                "id": 600,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 599,
                  "name": "Escrow",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 581,
                  "src": "1953:6:1"
                },
                "referencedDeclaration": 581,
                "src": "1953:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Escrow_$581_storage_ptr",
                  "typeString": "struct TwoPartySwapApricot.Escrow"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78a3113e",
            "id": 607,
            "mutability": "mutable",
            "name": "premiums",
            "nameLocation": "2017:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1981:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium)"
            },
            "typeName": {
              "id": 606,
              "keyType": {
                "id": 603,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1990:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1981:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium)"
              },
              "valueType": {
                "id": 605,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 604,
                  "name": "Premium",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 591,
                  "src": "2001:7:1"
                },
                "referencedDeclaration": 591,
                "src": "2001:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Premium_$591_storage_ptr",
                  "typeString": "struct TwoPartySwapApricot.Premium"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "2951:75:1",
              "text": " On setup, we need to know the hashlock and participants."
            },
            "id": 618,
            "name": "SetUp",
            "nameLocation": "3037:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3057:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "3052:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3052:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "3084:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "3076:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3076:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "alice",
                  "nameLocation": "3118:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "3102:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bob",
                  "nameLocation": "3149:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "3133:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3042:116:1"
            },
            "src": "3031:128:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 619,
              "nodeType": "StructuredDocumentation",
              "src": "3165:104:1",
              "text": " Once Bob deposits his premium, we want to check that he deposited the correct amount."
            },
            "id": 628,
            "name": "PremiumDeposited",
            "nameLocation": "3280:16:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3311:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "3306:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "premiumAmount",
                  "nameLocation": "3335:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "3330:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3330:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3364:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "3358:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 625,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 624,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "3358:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "3358:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:79:1"
            },
            "src": "3274:102:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 629,
              "nodeType": "StructuredDocumentation",
              "src": "3382:103:1",
              "text": " Once Alice escrows her asset, we want to check that she escrowed the correct amount."
            },
            "id": 638,
            "name": "AssetEscrowed",
            "nameLocation": "3496:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3525:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "3520:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3520:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "assetAmount",
                  "nameLocation": "3549:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "3544:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 636,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3576:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "3570:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 635,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 634,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "3570:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "3570:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3510:77:1"
            },
            "src": "3490:98:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 639,
              "nodeType": "StructuredDocumentation",
              "src": "3594:68:1",
              "text": " If the swap succeeds, Bob will collect his asset."
            },
            "id": 646,
            "name": "AssetRedeemed",
            "nameLocation": "3673:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3701:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "3696:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3696:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3726:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "3720:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 643,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 642,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "3720:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "3720:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3686:51:1"
            },
            "src": "3667:71:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 647,
              "nodeType": "StructuredDocumentation",
              "src": "3744:96:1",
              "text": " If the swap fails, Alice will redeem Bob's premium after the timout deadline."
            },
            "id": 654,
            "name": "PremiumRedeemed",
            "nameLocation": "3851:15:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 649,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3881:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "3876:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3906:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "3900:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 651,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 650,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "3900:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "3900:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3866:51:1"
            },
            "src": "3845:73:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 655,
              "nodeType": "StructuredDocumentation",
              "src": "3924:93:1",
              "text": " If the swap fails, Alice can get her asset back after the timout deadline."
            },
            "id": 662,
            "name": "AssetRefunded",
            "nameLocation": "4028:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4056:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "4051:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4051:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "4081:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "4075:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 659,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 658,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "4075:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "4075:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4041:51:1"
            },
            "src": "4022:71:1"
          },
          {
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "4137:133:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 667,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "4155:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 669,
                            "indexExpression": {
                              "id": 668,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 664,
                              "src": "4163:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4155:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 580,
                          "src": "4155:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 671,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4182:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Empty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 555,
                          "src": "4182:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4155:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4147:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4147:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 677,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4212:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 679,
                            "indexExpression": {
                              "id": 678,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 664,
                              "src": "4221:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4212:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 590,
                          "src": "4212:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 681,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4240:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Empty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 555,
                          "src": "4240:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4212:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4204:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4204:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "4204:48:1"
                },
                {
                  "id": 686,
                  "nodeType": "PlaceholderStatement",
                  "src": "4262:1:1"
                }
              ]
            },
            "id": 688,
            "name": "canSetup",
            "nameLocation": "4110:8:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "4127:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "4119:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4118:18:1"
            },
            "src": "4101:169:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 742,
              "nodeType": "Block",
              "src": "4321:331:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4339:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4339:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 695,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "4353:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 697,
                            "indexExpression": {
                              "id": 696,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4359:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4353:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bob",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 564,
                          "src": "4353:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4339:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4331:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4331:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 703,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4391:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 705,
                            "indexExpression": {
                              "id": 704,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4400:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4391:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 590,
                          "src": "4391:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 707,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4419:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Empty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 555,
                          "src": "4419:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4391:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4383:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4383:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "4383:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 720,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4492:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4492:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 714,
                                      "name": "swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 597,
                                      "src": "4455:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                        "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                      }
                                    },
                                    "id": 716,
                                    "indexExpression": {
                                      "id": 715,
                                      "name": "hashLock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 690,
                                      "src": "4461:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4455:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                      "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                                    }
                                  },
                                  "id": 717,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assetName",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 568,
                                  "src": "4455:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 713,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3058,
                                "src": "4449:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4449:32:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3058",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2611,
                            "src": "4449:42:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4449:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 723,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4507:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 725,
                            "indexExpression": {
                              "id": 724,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4516:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4507:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expected",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 583,
                          "src": "4507:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4449:85:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4441:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4441:94:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "4441:94:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 731,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4553:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4553:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 733,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4572:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 735,
                            "indexExpression": {
                              "id": 734,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4581:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4572:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 587,
                          "src": "4572:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4553:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646964206e6f7420657363726f77207072656d69756d20696e2074696d65",
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4601:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f",
                          "typeString": "literal_string \"did not escrow premium in time\""
                        },
                        "value": "did not escrow premium in time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f",
                          "typeString": "literal_string \"did not escrow premium in time\""
                        }
                      ],
                      "id": 730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4545:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4545:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "4545:89:1"
                },
                {
                  "id": 741,
                  "nodeType": "PlaceholderStatement",
                  "src": "4644:1:1"
                }
              ]
            },
            "id": 743,
            "name": "canDepositPremium",
            "nameLocation": "4285:17:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "4311:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "4303:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4303:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4302:18:1"
            },
            "src": "4276:376:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "4700:387:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 748,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4718:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4718:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 750,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "4732:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 752,
                            "indexExpression": {
                              "id": 751,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4738:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4732:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 562,
                          "src": "4732:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4718:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4710:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4710:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "4710:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 758,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4772:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 760,
                            "indexExpression": {
                              "id": 759,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4781:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4772:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 590,
                          "src": "4772:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 762,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4800:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Filled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 556,
                          "src": "4800:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4772:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4764:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "4764:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 768,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "4831:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 770,
                            "indexExpression": {
                              "id": 769,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4839:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4831:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 580,
                          "src": "4831:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 772,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4858:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Empty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 555,
                          "src": "4858:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4831:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4823:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "4823:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 785,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4931:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4931:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 779,
                                      "name": "swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 597,
                                      "src": "4894:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                        "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                      }
                                    },
                                    "id": 781,
                                    "indexExpression": {
                                      "id": 780,
                                      "name": "hashLock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 745,
                                      "src": "4900:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4894:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                      "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                                    }
                                  },
                                  "id": 782,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assetName",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 568,
                                  "src": "4894:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 778,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3058,
                                "src": "4888:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4888:32:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3058",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2611,
                            "src": "4888:42:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4888:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 788,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "4946:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 790,
                            "indexExpression": {
                              "id": 789,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4954:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4946:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 791,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expected",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 571,
                          "src": "4946:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4888:84:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4880:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4880:93:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "4880:93:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 796,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4991:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4991:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 798,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "5010:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 800,
                            "indexExpression": {
                              "id": 799,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "5018:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5010:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 575,
                          "src": "5010:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4991:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646964206e6f7420657363726f7720617373657420696e2074696d65",
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5038:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c",
                          "typeString": "literal_string \"did not escrow asset in time\""
                        },
                        "value": "did not escrow asset in time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c",
                          "typeString": "literal_string \"did not escrow asset in time\""
                        }
                      ],
                      "id": 795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4983:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4983:86:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "4983:86:1"
                },
                {
                  "id": 806,
                  "nodeType": "PlaceholderStatement",
                  "src": "5079:1:1"
                }
              ]
            },
            "id": 808,
            "name": "canEscrowAsset",
            "nameLocation": "4667:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "4690:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "4682:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4682:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4681:18:1"
            },
            "src": "4658:429:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 846,
              "nodeType": "Block",
              "src": "5153:199:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 815,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5171:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5171:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 817,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "5185:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 819,
                            "indexExpression": {
                              "id": 818,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "5191:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5185:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bob",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 564,
                          "src": "5185:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5171:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5163:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5163:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "5163:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 825,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5223:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5223:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 827,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "5242:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 829,
                            "indexExpression": {
                              "id": 828,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "5250:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5242:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 575,
                          "src": "5242:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5223:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5215:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5215:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "5215:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 838,
                                  "name": "preimage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 810,
                                  "src": "5311:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 836,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "5294:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5294:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5294:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 835,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967274,
                            "src": "5287:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5287:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 841,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 812,
                          "src": "5325:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "5287:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5279:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:55:1"
                },
                {
                  "id": 845,
                  "nodeType": "PlaceholderStatement",
                  "src": "5344:1:1"
                }
              ]
            },
            "id": 847,
            "name": "canRedeemAsset",
            "nameLocation": "5102:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "5125:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "5117:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "5143:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "5135:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5135:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5116:36:1"
            },
            "src": "5093:259:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "5418:199:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 854,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5436:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5436:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 856,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "5450:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 858,
                            "indexExpression": {
                              "id": 857,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "5456:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5450:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 562,
                          "src": "5450:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5436:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5428:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5428:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "5428:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 867,
                                  "name": "preimage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 849,
                                  "src": "5514:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 865,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "5497:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5497:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5497:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 864,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967274,
                            "src": "5490:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5490:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 870,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "5528:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "5490:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5482:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5482:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "5482:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 875,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5555:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5555:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 877,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "5573:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 879,
                            "indexExpression": {
                              "id": 878,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "5581:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5573:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timeout",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 577,
                          "src": "5573:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5555:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5547:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5547:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "5547:52:1"
                },
                {
                  "id": 884,
                  "nodeType": "PlaceholderStatement",
                  "src": "5609:1:1"
                }
              ]
            },
            "id": 886,
            "name": "canRefundAsset",
            "nameLocation": "5367:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "5390:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "5382:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5382:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "5408:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "5400:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5400:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5381:36:1"
            },
            "src": "5358:259:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 911,
              "nodeType": "Block",
              "src": "5668:134:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 891,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5686:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5686:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 893,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "5700:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 895,
                            "indexExpression": {
                              "id": 894,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "5706:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5700:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 562,
                          "src": "5700:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5686:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5678:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5678:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "5678:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 901,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5740:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5740:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 903,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "5758:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 905,
                            "indexExpression": {
                              "id": 904,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "5766:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5758:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 906,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timeout",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 577,
                          "src": "5758:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5740:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5732:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5732:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "5732:52:1"
                },
                {
                  "id": 910,
                  "nodeType": "PlaceholderStatement",
                  "src": "5794:1:1"
                }
              ]
            },
            "id": 912,
            "name": "canRedeemPremium",
            "nameLocation": "5633:16:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "5658:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "5650:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5650:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5649:18:1"
            },
            "src": "5624:178:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1001,
              "nodeType": "Block",
              "src": "6097:701:1",
              "statements": [
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 930,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "6138:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                          }
                        },
                        "id": 932,
                        "indexExpression": {
                          "id": 931,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6144:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6138:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                          "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hashLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 566,
                      "src": "6138:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 934,
                      "name": "hashLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 924,
                      "src": "6165:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6138:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "6138:35:1"
                },
                {
                  "expression": {
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 937,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "6183:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                          }
                        },
                        "id": 939,
                        "indexExpression": {
                          "id": 938,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6189:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6183:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                          "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                        }
                      },
                      "id": 940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "assetName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 568,
                      "src": "6183:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 941,
                      "name": "assetName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "6211:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6183:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:37:1"
                },
                {
                  "expression": {
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 944,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "6230:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                          }
                        },
                        "id": 946,
                        "indexExpression": {
                          "id": 945,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6236:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6230:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                          "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "alice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 562,
                      "src": "6230:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 948,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "6254:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6230:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "6230:29:1"
                },
                {
                  "expression": {
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 951,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "6269:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                          }
                        },
                        "id": 953,
                        "indexExpression": {
                          "id": 952,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6275:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6269:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                          "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bob",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 564,
                      "src": "6269:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 955,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 920,
                      "src": "6291:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6269:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "6269:25:1"
                },
                {
                  "expression": {
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 958,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "6337:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 960,
                        "indexExpression": {
                          "id": 959,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6345:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6337:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 571,
                      "src": "6337:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 962,
                      "name": "expectedEscrowAlice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "6366:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6337:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "6337:48:1"
                },
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 965,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "6430:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 967,
                        "indexExpression": {
                          "id": 966,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6438:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6430:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 575,
                      "src": "6430:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6459:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6430:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "6430:30:1"
                },
                {
                  "expression": {
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 972,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "6470:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 974,
                        "indexExpression": {
                          "id": 973,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6478:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6470:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 577,
                      "src": "6470:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6498:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6470:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "6470:29:1"
                },
                {
                  "expression": {
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 979,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "6551:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 981,
                        "indexExpression": {
                          "id": 980,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6560:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6551:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 583,
                      "src": "6551:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 983,
                      "name": "expectedPremiumBob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "6581:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6551:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "6551:48:1"
                },
                {
                  "expression": {
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 986,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "6642:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 988,
                        "indexExpression": {
                          "id": 987,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6651:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6642:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 587,
                      "src": "6642:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6672:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6642:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "6642:31:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 994,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "6708:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6708:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 996,
                        "name": "hashLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 924,
                        "src": "6737:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 997,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 918,
                        "src": "6759:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 998,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 920,
                        "src": "6778:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 993,
                      "name": "SetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "6689:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_address_payable_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,bytes32,address payable,address payable)"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6689:102:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "EmitStatement",
                  "src": "6684:107:1"
                }
              ]
            },
            "functionSelector": "584587ec",
            "id": 1002,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 927,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 924,
                    "src": "6087:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 928,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 926,
                  "name": "canSetup",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 688,
                  "src": "6078:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6078:18:1"
              }
            ],
            "name": "setup",
            "nameLocation": "5817:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "expectedEscrowAlice",
                  "nameLocation": "5828:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5823:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5823:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "expectedPremiumBob",
                  "nameLocation": "5874:18:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5869:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5869:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "alice",
                  "nameLocation": "5930:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5914:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5914:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 920,
                  "mutability": "mutable",
                  "name": "bob",
                  "nameLocation": "5973:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5957:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5957:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "assetName",
                  "nameLocation": "6006:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5998:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5998:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "6045:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "6037:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6037:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5822:232:1"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6097:0:1"
            },
            "scope": 1242,
            "src": "5808:990:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1062,
              "nodeType": "Block",
              "src": "7079:391:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1017,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "7135:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1019,
                          "indexExpression": {
                            "id": 1018,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7141:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7135:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bob",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "7135:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1023,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7164:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7156:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1021,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7156:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7156:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1025,
                            "name": "premiums",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "7171:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                            }
                          },
                          "id": 1027,
                          "indexExpression": {
                            "id": 1026,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7180:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7171:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Premium_$591_storage",
                            "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                          }
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expected",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 583,
                        "src": "7171:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1011,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "7095:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1013,
                              "indexExpression": {
                                "id": 1012,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "7101:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7095:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "7095:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1010,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "7089:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7089:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "7089:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7089:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1030,
                  "nodeType": "ExpressionStatement",
                  "src": "7089:110:1"
                },
                {
                  "expression": {
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1031,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "7209:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 1033,
                        "indexExpression": {
                          "id": 1032,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "7218:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7209:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 585,
                      "src": "7209:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1035,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "7238:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 1037,
                        "indexExpression": {
                          "id": 1036,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "7247:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7238:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 583,
                      "src": "7238:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7209:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "7209:56:1"
                },
                {
                  "expression": {
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1041,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "7275:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 1043,
                        "indexExpression": {
                          "id": 1042,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "7284:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7275:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 590,
                      "src": "7275:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$560",
                        "typeString": "enum TwoPartySwapApricot.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1045,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "7302:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                          "typeString": "type(enum TwoPartySwapApricot.State)"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 556,
                      "src": "7302:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$560",
                        "typeString": "enum TwoPartySwapApricot.State"
                      }
                    },
                    "src": "7275:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "7275:39:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1050,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "7360:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7360:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1052,
                            "name": "premiums",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "7389:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                            }
                          },
                          "id": 1054,
                          "indexExpression": {
                            "id": 1053,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7398:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7389:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Premium_$591_storage",
                            "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                          }
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 585,
                        "src": "7389:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1056,
                            "name": "premiums",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "7429:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                            }
                          },
                          "id": 1058,
                          "indexExpression": {
                            "id": 1057,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7438:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7429:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Premium_$591_storage",
                            "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 590,
                        "src": "7429:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1049,
                      "name": "PremiumDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "7330:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7330:133:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1061,
                  "nodeType": "EmitStatement",
                  "src": "7325:138:1"
                }
              ]
            },
            "functionSelector": "75a42088",
            "id": 1063,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1007,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1004,
                    "src": "7065:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1008,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1006,
                  "name": "canDepositPremium",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 743,
                  "src": "7047:17:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "7047:27:1"
              }
            ],
            "name": "depositPremium",
            "nameLocation": "6987:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "7010:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "7002:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7002:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7001:18:1"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7079:0:1"
            },
            "scope": 1242,
            "src": "6978:492:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "7612:384:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1078,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "7668:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1080,
                          "indexExpression": {
                            "id": 1079,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "7674:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7668:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 562,
                        "src": "7668:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1084,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7699:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7691:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7691:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7691:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1086,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "7706:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1088,
                          "indexExpression": {
                            "id": 1087,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "7714:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7706:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expected",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 571,
                        "src": "7706:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1072,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "7628:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1074,
                              "indexExpression": {
                                "id": 1073,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1065,
                                "src": "7634:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7628:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "7628:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1071,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "7622:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7622:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "7622:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7622:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "7622:111:1"
                },
                {
                  "expression": {
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1092,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "7743:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 1094,
                        "indexExpression": {
                          "id": 1093,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "7751:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7743:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 573,
                      "src": "7743:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1096,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "7771:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 1098,
                        "indexExpression": {
                          "id": 1097,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "7779:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7771:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 571,
                      "src": "7771:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7743:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "7743:54:1"
                },
                {
                  "expression": {
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1102,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "7807:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 1104,
                        "indexExpression": {
                          "id": 1103,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "7815:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7807:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 580,
                      "src": "7807:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$560",
                        "typeString": "enum TwoPartySwapApricot.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1106,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "7833:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                          "typeString": "type(enum TwoPartySwapApricot.State)"
                        }
                      },
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 556,
                      "src": "7833:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$560",
                        "typeString": "enum TwoPartySwapApricot.State"
                      }
                    },
                    "src": "7807:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "7807:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1111,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "7888:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7888:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1113,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "7917:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1115,
                          "indexExpression": {
                            "id": 1114,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "7925:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7917:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "7917:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1117,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "7956:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1119,
                          "indexExpression": {
                            "id": 1118,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "7964:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7956:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 580,
                        "src": "7956:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1110,
                      "name": "AssetEscrowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "7861:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7861:128:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "EmitStatement",
                  "src": "7856:133:1"
                }
              ]
            },
            "functionSelector": "e8d8c29b",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1068,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1065,
                    "src": "7602:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1069,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1067,
                  "name": "canEscrowAsset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 808,
                  "src": "7587:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "7587:24:1"
              }
            ],
            "name": "escrowAsset",
            "nameLocation": "7542:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "7562:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "7554:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7554:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7553:18:1"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7612:0:1"
            },
            "scope": 1242,
            "src": "7533:463:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "8101:226:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1144,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8165:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8157:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1142,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8157:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8157:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1146,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "8172:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1148,
                          "indexExpression": {
                            "id": 1147,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "8178:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8172:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bob",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "8172:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1150,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "8193:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1152,
                          "indexExpression": {
                            "id": 1151,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "8201:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8193:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "8193:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1136,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "8117:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1138,
                              "indexExpression": {
                                "id": 1137,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1128,
                                "src": "8123:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8117:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1139,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "8117:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1135,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "8111:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8111:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "8111:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8111:108:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "8111:108:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1157,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8262:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8262:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1159,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "8291:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                            "typeString": "type(enum TwoPartySwapApricot.State)"
                          }
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetRedeemed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 557,
                        "src": "8291:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1156,
                      "name": "AssetRedeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "8235:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8235:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "EmitStatement",
                  "src": "8230:90:1"
                }
              ]
            },
            "functionSelector": "d72a0a53",
            "id": 1164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1131,
                    "name": "preimage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1126,
                    "src": "8081:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 1132,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1128,
                    "src": "8091:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1130,
                  "name": "canRedeemAsset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 847,
                  "src": "8066:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8066:34:1"
              }
            ],
            "name": "redeemAsset",
            "nameLocation": "8011:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "8031:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "8023:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "8049:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "8041:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8041:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8022:36:1"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8101:0:1"
            },
            "scope": 1242,
            "src": "8002:325:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1203,
              "nodeType": "Block",
              "src": "8432:228:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1184,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8496:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8488:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8488:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8488:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1186,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "8503:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1188,
                          "indexExpression": {
                            "id": 1187,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "8509:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8503:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 562,
                        "src": "8503:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1190,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "8526:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1192,
                          "indexExpression": {
                            "id": 1191,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "8534:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8526:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "8526:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1176,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "8448:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1178,
                              "indexExpression": {
                                "id": 1177,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1168,
                                "src": "8454:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8448:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1179,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "8448:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1175,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "8442:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8442:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "8442:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8442:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "8442:110:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1197,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8595:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8595:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1199,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "8624:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                            "typeString": "type(enum TwoPartySwapApricot.State)"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetRefunded",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 558,
                        "src": "8624:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1196,
                      "name": "AssetRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "8568:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8568:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1202,
                  "nodeType": "EmitStatement",
                  "src": "8563:90:1"
                }
              ]
            },
            "functionSelector": "10101e29",
            "id": 1204,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1171,
                    "name": "preimage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1166,
                    "src": "8412:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 1172,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1168,
                    "src": "8422:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1170,
                  "name": "canRedeemAsset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 847,
                  "src": "8397:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8397:34:1"
              }
            ],
            "name": "refundAsset",
            "nameLocation": "8342:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "8362:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "8354:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8354:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "8380:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "8372:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8372:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8353:36:1"
            },
            "returnParameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8432:0:1"
            },
            "scope": 1242,
            "src": "8333:327:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "8740:228:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1221,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8804:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8796:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8796:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8796:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1223,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "8811:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1225,
                          "indexExpression": {
                            "id": 1224,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "8817:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8811:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 562,
                        "src": "8811:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1227,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "8834:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1229,
                          "indexExpression": {
                            "id": 1228,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "8842:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8834:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "8834:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1213,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "8756:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1215,
                              "indexExpression": {
                                "id": 1214,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1206,
                                "src": "8762:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8756:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "8756:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1212,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "8750:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8750:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "8750:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8750:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "8750:110:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1234,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8903:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8903:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1236,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "8932:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                            "typeString": "type(enum TwoPartySwapApricot.State)"
                          }
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetRedeemed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 557,
                        "src": "8932:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1233,
                      "name": "AssetRedeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "8876:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8876:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "EmitStatement",
                  "src": "8871:90:1"
                }
              ]
            },
            "functionSelector": "b55587a9",
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1209,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1206,
                    "src": "8731:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1210,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1208,
                  "name": "canRedeemPremium",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 912,
                  "src": "8714:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8714:26:1"
              }
            ],
            "name": "redeemPremium",
            "nameLocation": "8675:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1206,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "8697:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "8689:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8689:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8688:18:1"
            },
            "returnParameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8740:0:1"
            },
            "scope": 1242,
            "src": "8666:302:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1243,
        "src": "688:8282:1",
        "usedErrors": []
      }
    ],
    "src": "192:8778:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ApricotSwap.sol",
    "exportedSymbols": {
      "Context": [
        3183
      ],
      "ERC20": [
        3058
      ],
      "IERC20": [
        3136
      ],
      "IERC20Metadata": [
        3161
      ],
      "TwoPartySwapApricot": [
        1242
      ]
    },
    "id": 1243,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 553,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "192:23:1"
      },
      {
        "absolutePath": "project:/contracts/libraries/token/ERC20/ERC20.sol",
        "file": "./libraries/token/ERC20/ERC20.sol",
        "id": 554,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 3059,
        "src": "217:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TwoPartySwapApricot",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1242,
        "linearizedBaseContracts": [
          1242
        ],
        "name": "TwoPartySwapApricot",
        "nameLocation": "697:19:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TwoPartySwapApricot.State",
            "id": 560,
            "members": [
              {
                "id": 555,
                "name": "Empty",
                "nameLocation": "983:5:1",
                "nodeType": "EnumValue",
                "src": "983:5:1"
              },
              {
                "id": 556,
                "name": "Filled",
                "nameLocation": "990:6:1",
                "nodeType": "EnumValue",
                "src": "990:6:1"
              },
              {
                "id": 557,
                "name": "AssetRedeemed",
                "nameLocation": "998:13:1",
                "nodeType": "EnumValue",
                "src": "998:13:1"
              },
              {
                "id": 558,
                "name": "AssetRefunded",
                "nameLocation": "1013:13:1",
                "nodeType": "EnumValue",
                "src": "1013:13:1"
              },
              {
                "id": 559,
                "name": "PremiumRefunded",
                "nameLocation": "1028:15:1",
                "nodeType": "EnumValue",
                "src": "1028:15:1"
              }
            ],
            "name": "State",
            "nameLocation": "975:5:1",
            "nodeType": "EnumDefinition",
            "src": "970:74:1"
          },
          {
            "canonicalName": "TwoPartySwapApricot.ApricotSwap",
            "id": 569,
            "members": [
              {
                "constant": false,
                "id": 562,
                "mutability": "mutable",
                "name": "alice",
                "nameLocation": "1209:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 569,
                "src": "1193:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 561,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 564,
                "mutability": "mutable",
                "name": "bob",
                "nameLocation": "1240:3:1",
                "nodeType": "VariableDeclaration",
                "scope": 569,
                "src": "1224:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 563,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1224:15:1",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 566,
                "mutability": "mutable",
                "name": "hashLock",
                "nameLocation": "1261:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 569,
                "src": "1253:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 565,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1253:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 568,
                "mutability": "mutable",
                "name": "assetName",
                "nameLocation": "1287:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 569,
                "src": "1279:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 567,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1279:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ApricotSwap",
            "nameLocation": "1148:11:1",
            "nodeType": "StructDefinition",
            "scope": 1242,
            "src": "1141:162:1",
            "visibility": "public"
          },
          {
            "canonicalName": "TwoPartySwapApricot.Escrow",
            "id": 581,
            "members": [
              {
                "constant": false,
                "id": 571,
                "mutability": "mutable",
                "name": "expected",
                "nameLocation": "1438:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1433:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 570,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1433:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 573,
                "mutability": "mutable",
                "name": "current",
                "nameLocation": "1461:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1456:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 572,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1456:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 575,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "1524:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1519:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 574,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1519:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 577,
                "mutability": "mutable",
                "name": "timeout",
                "nameLocation": "1586:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1581:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 576,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1581:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 580,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "1609:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 581,
                "src": "1603:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$560",
                  "typeString": "enum TwoPartySwapApricot.State"
                },
                "typeName": {
                  "id": 579,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 578,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 560,
                    "src": "1603:5:1"
                  },
                  "referencedDeclaration": 560,
                  "src": "1603:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Escrow",
            "nameLocation": "1391:6:1",
            "nodeType": "StructDefinition",
            "scope": 1242,
            "src": "1384:237:1",
            "visibility": "public"
          },
          {
            "canonicalName": "TwoPartySwapApricot.Premium",
            "id": 591,
            "members": [
              {
                "constant": false,
                "id": 583,
                "mutability": "mutable",
                "name": "expected",
                "nameLocation": "1736:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "1731:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 582,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1731:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 585,
                "mutability": "mutable",
                "name": "current",
                "nameLocation": "1759:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "1754:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 584,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1754:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 587,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "1781:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "1776:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 586,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1776:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 590,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "1805:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 591,
                "src": "1799:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$560",
                  "typeString": "enum TwoPartySwapApricot.State"
                },
                "typeName": {
                  "id": 589,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 588,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 560,
                    "src": "1799:5:1"
                  },
                  "referencedDeclaration": 560,
                  "src": "1799:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Premium",
            "nameLocation": "1713:7:1",
            "nodeType": "StructDefinition",
            "scope": 1242,
            "src": "1706:111:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 592,
              "nodeType": "StructuredDocumentation",
              "src": "1823:56:1",
              "text": " Mappings that store our swap details."
            },
            "functionSelector": "eb84e7f2",
            "id": 597,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "1923:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1884:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap)"
            },
            "typeName": {
              "id": 596,
              "keyType": {
                "id": 593,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1892:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1884:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap)"
              },
              "valueType": {
                "id": 595,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 594,
                  "name": "ApricotSwap",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 569,
                  "src": "1903:11:1"
                },
                "referencedDeclaration": 569,
                "src": "1903:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ApricotSwap_$569_storage_ptr",
                  "typeString": "struct TwoPartySwapApricot.ApricotSwap"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d83549c",
            "id": 602,
            "mutability": "mutable",
            "name": "escrows",
            "nameLocation": "1968:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1934:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow)"
            },
            "typeName": {
              "id": 601,
              "keyType": {
                "id": 598,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1942:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1934:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow)"
              },
              "valueType": {
                "id": 600,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 599,
                  "name": "Escrow",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 581,
                  "src": "1953:6:1"
                },
                "referencedDeclaration": 581,
                "src": "1953:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Escrow_$581_storage_ptr",
                  "typeString": "struct TwoPartySwapApricot.Escrow"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78a3113e",
            "id": 607,
            "mutability": "mutable",
            "name": "premiums",
            "nameLocation": "2017:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1981:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium)"
            },
            "typeName": {
              "id": 606,
              "keyType": {
                "id": 603,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1990:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1981:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium)"
              },
              "valueType": {
                "id": 605,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 604,
                  "name": "Premium",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 591,
                  "src": "2001:7:1"
                },
                "referencedDeclaration": 591,
                "src": "2001:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Premium_$591_storage_ptr",
                  "typeString": "struct TwoPartySwapApricot.Premium"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "2951:75:1",
              "text": " On setup, we need to know the hashlock and participants."
            },
            "id": 618,
            "name": "SetUp",
            "nameLocation": "3037:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3057:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "3052:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3052:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "3084:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "3076:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3076:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "alice",
                  "nameLocation": "3118:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "3102:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bob",
                  "nameLocation": "3149:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 618,
                  "src": "3133:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3042:116:1"
            },
            "src": "3031:128:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 619,
              "nodeType": "StructuredDocumentation",
              "src": "3165:104:1",
              "text": " Once Bob deposits his premium, we want to check that he deposited the correct amount."
            },
            "id": 628,
            "name": "PremiumDeposited",
            "nameLocation": "3280:16:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3311:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "3306:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "premiumAmount",
                  "nameLocation": "3335:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "3330:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3330:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3364:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 628,
                  "src": "3358:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 625,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 624,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "3358:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "3358:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:79:1"
            },
            "src": "3274:102:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 629,
              "nodeType": "StructuredDocumentation",
              "src": "3382:103:1",
              "text": " Once Alice escrows her asset, we want to check that she escrowed the correct amount."
            },
            "id": 638,
            "name": "AssetEscrowed",
            "nameLocation": "3496:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3525:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "3520:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3520:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "assetAmount",
                  "nameLocation": "3549:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "3544:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 636,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3576:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "3570:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 635,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 634,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "3570:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "3570:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3510:77:1"
            },
            "src": "3490:98:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 639,
              "nodeType": "StructuredDocumentation",
              "src": "3594:68:1",
              "text": " If the swap succeeds, Bob will collect his asset."
            },
            "id": 646,
            "name": "AssetRedeemed",
            "nameLocation": "3673:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3701:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "3696:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3696:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3726:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "3720:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 643,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 642,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "3720:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "3720:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3686:51:1"
            },
            "src": "3667:71:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 647,
              "nodeType": "StructuredDocumentation",
              "src": "3744:96:1",
              "text": " If the swap fails, Alice will redeem Bob's premium after the timout deadline."
            },
            "id": 654,
            "name": "PremiumRedeemed",
            "nameLocation": "3851:15:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 649,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3881:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "3876:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3906:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "3900:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 651,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 650,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "3900:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "3900:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3866:51:1"
            },
            "src": "3845:73:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 655,
              "nodeType": "StructuredDocumentation",
              "src": "3924:93:1",
              "text": " If the swap fails, Alice can get her asset back after the timout deadline."
            },
            "id": 662,
            "name": "AssetRefunded",
            "nameLocation": "4028:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4056:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "4051:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4051:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "4081:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "4075:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$560",
                    "typeString": "enum TwoPartySwapApricot.State"
                  },
                  "typeName": {
                    "id": 659,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 658,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 560,
                      "src": "4075:5:1"
                    },
                    "referencedDeclaration": 560,
                    "src": "4075:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4041:51:1"
            },
            "src": "4022:71:1"
          },
          {
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "4137:133:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 667,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "4155:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 669,
                            "indexExpression": {
                              "id": 668,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 664,
                              "src": "4163:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4155:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 580,
                          "src": "4155:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 671,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4182:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Empty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 555,
                          "src": "4182:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4155:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4147:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4147:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 677,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4212:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 679,
                            "indexExpression": {
                              "id": 678,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 664,
                              "src": "4221:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4212:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 590,
                          "src": "4212:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 681,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4240:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Empty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 555,
                          "src": "4240:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4212:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4204:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4204:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "4204:48:1"
                },
                {
                  "id": 686,
                  "nodeType": "PlaceholderStatement",
                  "src": "4262:1:1"
                }
              ]
            },
            "id": 688,
            "name": "canSetup",
            "nameLocation": "4110:8:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "4127:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "4119:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4118:18:1"
            },
            "src": "4101:169:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 742,
              "nodeType": "Block",
              "src": "4321:331:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4339:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4339:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 695,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "4353:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 697,
                            "indexExpression": {
                              "id": 696,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4359:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4353:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bob",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 564,
                          "src": "4353:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4339:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4331:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4331:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 703,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4391:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 705,
                            "indexExpression": {
                              "id": 704,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4400:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4391:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 590,
                          "src": "4391:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 707,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4419:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Empty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 555,
                          "src": "4419:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4391:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4383:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4383:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "4383:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 720,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4492:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4492:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 714,
                                      "name": "swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 597,
                                      "src": "4455:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                        "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                      }
                                    },
                                    "id": 716,
                                    "indexExpression": {
                                      "id": 715,
                                      "name": "hashLock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 690,
                                      "src": "4461:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4455:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                      "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                                    }
                                  },
                                  "id": 717,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assetName",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 568,
                                  "src": "4455:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 713,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3058,
                                "src": "4449:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4449:32:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3058",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2611,
                            "src": "4449:42:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4449:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 723,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4507:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 725,
                            "indexExpression": {
                              "id": 724,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4516:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4507:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expected",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 583,
                          "src": "4507:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4449:85:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4441:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4441:94:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "4441:94:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 731,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4553:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4553:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 733,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4572:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 735,
                            "indexExpression": {
                              "id": 734,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4581:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4572:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 587,
                          "src": "4572:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4553:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646964206e6f7420657363726f77207072656d69756d20696e2074696d65",
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4601:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f",
                          "typeString": "literal_string \"did not escrow premium in time\""
                        },
                        "value": "did not escrow premium in time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a46d83299eaf50944ab1904c126ecea792e81b66df81da35ea10a0f75857d87f",
                          "typeString": "literal_string \"did not escrow premium in time\""
                        }
                      ],
                      "id": 730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4545:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4545:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "4545:89:1"
                },
                {
                  "id": 741,
                  "nodeType": "PlaceholderStatement",
                  "src": "4644:1:1"
                }
              ]
            },
            "id": 743,
            "name": "canDepositPremium",
            "nameLocation": "4285:17:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "4311:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "4303:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4303:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4302:18:1"
            },
            "src": "4276:376:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "4700:387:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 748,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4718:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4718:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 750,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "4732:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 752,
                            "indexExpression": {
                              "id": 751,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4738:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4732:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 562,
                          "src": "4732:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4718:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4710:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4710:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "4710:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 758,
                              "name": "premiums",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4772:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                              }
                            },
                            "id": 760,
                            "indexExpression": {
                              "id": 759,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4781:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4772:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Premium_$591_storage",
                              "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 590,
                          "src": "4772:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 762,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4800:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Filled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 556,
                          "src": "4800:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4772:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4764:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "4764:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 768,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "4831:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 770,
                            "indexExpression": {
                              "id": 769,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4839:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4831:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 580,
                          "src": "4831:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 772,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "4858:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                              "typeString": "type(enum TwoPartySwapApricot.State)"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Empty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 555,
                          "src": "4858:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$560",
                            "typeString": "enum TwoPartySwapApricot.State"
                          }
                        },
                        "src": "4831:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4823:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "4823:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 785,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4931:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4931:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 779,
                                      "name": "swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 597,
                                      "src": "4894:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                        "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                      }
                                    },
                                    "id": 781,
                                    "indexExpression": {
                                      "id": 780,
                                      "name": "hashLock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 745,
                                      "src": "4900:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4894:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                      "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                                    }
                                  },
                                  "id": 782,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assetName",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 568,
                                  "src": "4894:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 778,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3058,
                                "src": "4888:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4888:32:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3058",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2611,
                            "src": "4888:42:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4888:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 788,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "4946:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 790,
                            "indexExpression": {
                              "id": 789,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "4954:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4946:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 791,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expected",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 571,
                          "src": "4946:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4888:84:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4880:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4880:93:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "4880:93:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 796,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4991:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4991:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 798,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "5010:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 800,
                            "indexExpression": {
                              "id": 799,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "5018:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5010:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 575,
                          "src": "5010:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4991:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "646964206e6f7420657363726f7720617373657420696e2074696d65",
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5038:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c",
                          "typeString": "literal_string \"did not escrow asset in time\""
                        },
                        "value": "did not escrow asset in time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63d25a1afa37d36f379d29d0d1175d5376af1f8839b71ce518c7f93922ce021c",
                          "typeString": "literal_string \"did not escrow asset in time\""
                        }
                      ],
                      "id": 795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4983:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4983:86:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "4983:86:1"
                },
                {
                  "id": 806,
                  "nodeType": "PlaceholderStatement",
                  "src": "5079:1:1"
                }
              ]
            },
            "id": 808,
            "name": "canEscrowAsset",
            "nameLocation": "4667:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "4690:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "4682:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4682:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4681:18:1"
            },
            "src": "4658:429:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 846,
              "nodeType": "Block",
              "src": "5153:199:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 815,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5171:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5171:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 817,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "5185:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 819,
                            "indexExpression": {
                              "id": 818,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "5191:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5185:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bob",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 564,
                          "src": "5185:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5171:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5163:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5163:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "5163:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 825,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5223:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5223:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 827,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "5242:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 829,
                            "indexExpression": {
                              "id": 828,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "5250:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5242:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 575,
                          "src": "5242:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5223:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5215:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5215:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "5215:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 838,
                                  "name": "preimage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 810,
                                  "src": "5311:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 836,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "5294:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5294:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5294:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 835,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967274,
                            "src": "5287:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5287:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 841,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 812,
                          "src": "5325:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "5287:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5279:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:55:1"
                },
                {
                  "id": 845,
                  "nodeType": "PlaceholderStatement",
                  "src": "5344:1:1"
                }
              ]
            },
            "id": 847,
            "name": "canRedeemAsset",
            "nameLocation": "5102:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "5125:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "5117:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "5143:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "5135:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5135:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5116:36:1"
            },
            "src": "5093:259:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "5418:199:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 854,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5436:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5436:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 856,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "5450:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 858,
                            "indexExpression": {
                              "id": 857,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "5456:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5450:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 562,
                          "src": "5450:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5436:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5428:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5428:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "5428:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 867,
                                  "name": "preimage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 849,
                                  "src": "5514:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 865,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "5497:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5497:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5497:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 864,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967274,
                            "src": "5490:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5490:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 870,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "5528:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "5490:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5482:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5482:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "5482:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 875,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5555:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5555:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 877,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "5573:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 879,
                            "indexExpression": {
                              "id": 878,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "5581:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5573:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timeout",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 577,
                          "src": "5573:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5555:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5547:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5547:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "5547:52:1"
                },
                {
                  "id": 884,
                  "nodeType": "PlaceholderStatement",
                  "src": "5609:1:1"
                }
              ]
            },
            "id": 886,
            "name": "canRefundAsset",
            "nameLocation": "5367:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "5390:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "5382:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5382:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "5408:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "5400:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5400:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5381:36:1"
            },
            "src": "5358:259:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 911,
              "nodeType": "Block",
              "src": "5668:134:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 891,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5686:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5686:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 893,
                              "name": "swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "5700:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                              }
                            },
                            "id": 895,
                            "indexExpression": {
                              "id": 894,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "5706:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5700:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                              "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 562,
                          "src": "5700:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5686:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5678:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5678:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "5678:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 901,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5740:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5740:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 903,
                              "name": "escrows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "5758:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                                "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                              }
                            },
                            "id": 905,
                            "indexExpression": {
                              "id": 904,
                              "name": "hashLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "5766:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5758:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Escrow_$581_storage",
                              "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                            }
                          },
                          "id": 906,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timeout",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 577,
                          "src": "5758:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5740:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5732:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5732:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "5732:52:1"
                },
                {
                  "id": 910,
                  "nodeType": "PlaceholderStatement",
                  "src": "5794:1:1"
                }
              ]
            },
            "id": 912,
            "name": "canRedeemPremium",
            "nameLocation": "5633:16:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "5658:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "5650:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5650:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5649:18:1"
            },
            "src": "5624:178:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1001,
              "nodeType": "Block",
              "src": "6097:701:1",
              "statements": [
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 930,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "6138:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                          }
                        },
                        "id": 932,
                        "indexExpression": {
                          "id": 931,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6144:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6138:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                          "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hashLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 566,
                      "src": "6138:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 934,
                      "name": "hashLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 924,
                      "src": "6165:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6138:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "6138:35:1"
                },
                {
                  "expression": {
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 937,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "6183:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                          }
                        },
                        "id": 939,
                        "indexExpression": {
                          "id": 938,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6189:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6183:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                          "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                        }
                      },
                      "id": 940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "assetName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 568,
                      "src": "6183:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 941,
                      "name": "assetName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "6211:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6183:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:37:1"
                },
                {
                  "expression": {
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 944,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "6230:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                          }
                        },
                        "id": 946,
                        "indexExpression": {
                          "id": 945,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6236:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6230:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                          "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "alice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 562,
                      "src": "6230:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 948,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "6254:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6230:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "6230:29:1"
                },
                {
                  "expression": {
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 951,
                          "name": "swaps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "6269:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                          }
                        },
                        "id": 953,
                        "indexExpression": {
                          "id": 952,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6275:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6269:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                          "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bob",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 564,
                      "src": "6269:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 955,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 920,
                      "src": "6291:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6269:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "6269:25:1"
                },
                {
                  "expression": {
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 958,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "6337:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 960,
                        "indexExpression": {
                          "id": 959,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6345:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6337:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 571,
                      "src": "6337:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 962,
                      "name": "expectedEscrowAlice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "6366:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6337:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "6337:48:1"
                },
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 965,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "6430:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 967,
                        "indexExpression": {
                          "id": 966,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6438:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6430:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 575,
                      "src": "6430:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6459:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6430:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "6430:30:1"
                },
                {
                  "expression": {
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 972,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "6470:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 974,
                        "indexExpression": {
                          "id": 973,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6478:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6470:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 577,
                      "src": "6470:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6498:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6470:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "6470:29:1"
                },
                {
                  "expression": {
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 979,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "6551:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 981,
                        "indexExpression": {
                          "id": 980,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6560:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6551:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 583,
                      "src": "6551:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 983,
                      "name": "expectedPremiumBob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "6581:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6551:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "6551:48:1"
                },
                {
                  "expression": {
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 986,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "6642:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 988,
                        "indexExpression": {
                          "id": 987,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "6651:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6642:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 587,
                      "src": "6642:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6672:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6642:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "6642:31:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 994,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "6708:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6708:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 996,
                        "name": "hashLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 924,
                        "src": "6737:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 997,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 918,
                        "src": "6759:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 998,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 920,
                        "src": "6778:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 993,
                      "name": "SetUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "6689:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_address_payable_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,bytes32,address payable,address payable)"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6689:102:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "EmitStatement",
                  "src": "6684:107:1"
                }
              ]
            },
            "functionSelector": "584587ec",
            "id": 1002,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 927,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 924,
                    "src": "6087:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 928,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 926,
                  "name": "canSetup",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 688,
                  "src": "6078:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6078:18:1"
              }
            ],
            "name": "setup",
            "nameLocation": "5817:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "expectedEscrowAlice",
                  "nameLocation": "5828:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5823:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5823:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "expectedPremiumBob",
                  "nameLocation": "5874:18:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5869:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5869:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "alice",
                  "nameLocation": "5930:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5914:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5914:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 920,
                  "mutability": "mutable",
                  "name": "bob",
                  "nameLocation": "5973:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5957:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5957:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "assetName",
                  "nameLocation": "6006:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "5998:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5998:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "6045:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1002,
                  "src": "6037:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6037:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5822:232:1"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6097:0:1"
            },
            "scope": 1242,
            "src": "5808:990:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1062,
              "nodeType": "Block",
              "src": "7079:391:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1017,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "7135:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1019,
                          "indexExpression": {
                            "id": 1018,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7141:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7135:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bob",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "7135:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1023,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7164:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7156:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1021,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7156:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7156:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1025,
                            "name": "premiums",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "7171:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                            }
                          },
                          "id": 1027,
                          "indexExpression": {
                            "id": 1026,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7180:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7171:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Premium_$591_storage",
                            "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                          }
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expected",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 583,
                        "src": "7171:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1011,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "7095:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1013,
                              "indexExpression": {
                                "id": 1012,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "7101:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7095:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "7095:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1010,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "7089:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7089:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "7089:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7089:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1030,
                  "nodeType": "ExpressionStatement",
                  "src": "7089:110:1"
                },
                {
                  "expression": {
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1031,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "7209:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 1033,
                        "indexExpression": {
                          "id": 1032,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "7218:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7209:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 585,
                      "src": "7209:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1035,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "7238:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 1037,
                        "indexExpression": {
                          "id": 1036,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "7247:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7238:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 583,
                      "src": "7238:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7209:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "7209:56:1"
                },
                {
                  "expression": {
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1041,
                          "name": "premiums",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "7275:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                          }
                        },
                        "id": 1043,
                        "indexExpression": {
                          "id": 1042,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "7284:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7275:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Premium_$591_storage",
                          "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 590,
                      "src": "7275:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$560",
                        "typeString": "enum TwoPartySwapApricot.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1045,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "7302:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                          "typeString": "type(enum TwoPartySwapApricot.State)"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 556,
                      "src": "7302:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$560",
                        "typeString": "enum TwoPartySwapApricot.State"
                      }
                    },
                    "src": "7275:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "7275:39:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1050,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "7360:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7360:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1052,
                            "name": "premiums",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "7389:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                            }
                          },
                          "id": 1054,
                          "indexExpression": {
                            "id": 1053,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7398:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7389:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Premium_$591_storage",
                            "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                          }
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 585,
                        "src": "7389:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1056,
                            "name": "premiums",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "7429:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Premium_$591_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Premium storage ref)"
                            }
                          },
                          "id": 1058,
                          "indexExpression": {
                            "id": 1057,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7438:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7429:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Premium_$591_storage",
                            "typeString": "struct TwoPartySwapApricot.Premium storage ref"
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 590,
                        "src": "7429:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1049,
                      "name": "PremiumDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "7330:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7330:133:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1061,
                  "nodeType": "EmitStatement",
                  "src": "7325:138:1"
                }
              ]
            },
            "functionSelector": "75a42088",
            "id": 1063,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1007,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1004,
                    "src": "7065:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1008,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1006,
                  "name": "canDepositPremium",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 743,
                  "src": "7047:17:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "7047:27:1"
              }
            ],
            "name": "depositPremium",
            "nameLocation": "6987:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "7010:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1063,
                  "src": "7002:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7002:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7001:18:1"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7079:0:1"
            },
            "scope": 1242,
            "src": "6978:492:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "7612:384:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1078,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "7668:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1080,
                          "indexExpression": {
                            "id": 1079,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "7674:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7668:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 562,
                        "src": "7668:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1084,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7699:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7691:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7691:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7691:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1086,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "7706:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1088,
                          "indexExpression": {
                            "id": 1087,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "7714:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7706:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expected",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 571,
                        "src": "7706:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1072,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "7628:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1074,
                              "indexExpression": {
                                "id": 1073,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1065,
                                "src": "7634:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7628:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "7628:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1071,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "7622:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7622:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "7622:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7622:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "7622:111:1"
                },
                {
                  "expression": {
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1092,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "7743:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 1094,
                        "indexExpression": {
                          "id": 1093,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "7751:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7743:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 573,
                      "src": "7743:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1096,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "7771:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 1098,
                        "indexExpression": {
                          "id": 1097,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "7779:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7771:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 571,
                      "src": "7771:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7743:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "7743:54:1"
                },
                {
                  "expression": {
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1102,
                          "name": "escrows",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "7807:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                            "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                          }
                        },
                        "id": 1104,
                        "indexExpression": {
                          "id": 1103,
                          "name": "hashLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "7815:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7807:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Escrow_$581_storage",
                          "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 580,
                      "src": "7807:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$560",
                        "typeString": "enum TwoPartySwapApricot.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1106,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "7833:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                          "typeString": "type(enum TwoPartySwapApricot.State)"
                        }
                      },
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Filled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 556,
                      "src": "7833:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$560",
                        "typeString": "enum TwoPartySwapApricot.State"
                      }
                    },
                    "src": "7807:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$560",
                      "typeString": "enum TwoPartySwapApricot.State"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "7807:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1111,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "7888:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7888:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1113,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "7917:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1115,
                          "indexExpression": {
                            "id": 1114,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "7925:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7917:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "7917:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1117,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "7956:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1119,
                          "indexExpression": {
                            "id": 1118,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "7964:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7956:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 580,
                        "src": "7956:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1110,
                      "name": "AssetEscrowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "7861:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7861:128:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "EmitStatement",
                  "src": "7856:133:1"
                }
              ]
            },
            "functionSelector": "e8d8c29b",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1068,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1065,
                    "src": "7602:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1069,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1067,
                  "name": "canEscrowAsset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 808,
                  "src": "7587:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "7587:24:1"
              }
            ],
            "name": "escrowAsset",
            "nameLocation": "7542:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "7562:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "7554:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7554:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7553:18:1"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7612:0:1"
            },
            "scope": 1242,
            "src": "7533:463:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "8101:226:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1144,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8165:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8157:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1142,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8157:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8157:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1146,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "8172:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1148,
                          "indexExpression": {
                            "id": 1147,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "8178:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8172:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bob",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 564,
                        "src": "8172:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1150,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "8193:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1152,
                          "indexExpression": {
                            "id": 1151,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "8201:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8193:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "8193:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1136,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "8117:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1138,
                              "indexExpression": {
                                "id": 1137,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1128,
                                "src": "8123:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8117:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1139,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "8117:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1135,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "8111:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8111:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "8111:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8111:108:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "8111:108:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1157,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8262:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8262:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1159,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "8291:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                            "typeString": "type(enum TwoPartySwapApricot.State)"
                          }
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetRedeemed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 557,
                        "src": "8291:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1156,
                      "name": "AssetRedeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "8235:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8235:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "EmitStatement",
                  "src": "8230:90:1"
                }
              ]
            },
            "functionSelector": "d72a0a53",
            "id": 1164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1131,
                    "name": "preimage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1126,
                    "src": "8081:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 1132,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1128,
                    "src": "8091:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1130,
                  "name": "canRedeemAsset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 847,
                  "src": "8066:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8066:34:1"
              }
            ],
            "name": "redeemAsset",
            "nameLocation": "8011:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "8031:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "8023:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "8049:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "8041:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8041:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8022:36:1"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8101:0:1"
            },
            "scope": 1242,
            "src": "8002:325:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1203,
              "nodeType": "Block",
              "src": "8432:228:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1184,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8496:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8488:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8488:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8488:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1186,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "8503:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1188,
                          "indexExpression": {
                            "id": 1187,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "8509:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8503:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 562,
                        "src": "8503:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1190,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "8526:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1192,
                          "indexExpression": {
                            "id": 1191,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "8534:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8526:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "8526:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1176,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "8448:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1178,
                              "indexExpression": {
                                "id": 1177,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1168,
                                "src": "8454:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8448:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1179,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "8448:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1175,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "8442:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8442:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "8442:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8442:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "8442:110:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1197,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8595:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8595:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1199,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "8624:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                            "typeString": "type(enum TwoPartySwapApricot.State)"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetRefunded",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 558,
                        "src": "8624:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1196,
                      "name": "AssetRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "8568:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8568:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1202,
                  "nodeType": "EmitStatement",
                  "src": "8563:90:1"
                }
              ]
            },
            "functionSelector": "10101e29",
            "id": 1204,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1171,
                    "name": "preimage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1166,
                    "src": "8412:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 1172,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1168,
                    "src": "8422:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1170,
                  "name": "canRedeemAsset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 847,
                  "src": "8397:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8397:34:1"
              }
            ],
            "name": "refundAsset",
            "nameLocation": "8342:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "8362:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "8354:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8354:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "8380:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "8372:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8372:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8353:36:1"
            },
            "returnParameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8432:0:1"
            },
            "scope": 1242,
            "src": "8333:327:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "8740:228:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1221,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8804:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TwoPartySwapApricot_$1242",
                              "typeString": "contract TwoPartySwapApricot"
                            }
                          ],
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8796:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8796:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8796:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1223,
                            "name": "swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "8811:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                            }
                          },
                          "id": 1225,
                          "indexExpression": {
                            "id": 1224,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "8817:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8811:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                            "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                          }
                        },
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "alice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 562,
                        "src": "8811:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1227,
                            "name": "escrows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "8834:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Escrow_$581_storage_$",
                              "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.Escrow storage ref)"
                            }
                          },
                          "id": 1229,
                          "indexExpression": {
                            "id": 1228,
                            "name": "hashLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "8842:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8834:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Escrow_$581_storage",
                            "typeString": "struct TwoPartySwapApricot.Escrow storage ref"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "8834:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1213,
                                "name": "swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "8756:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ApricotSwap_$569_storage_$",
                                  "typeString": "mapping(bytes32 => struct TwoPartySwapApricot.ApricotSwap storage ref)"
                                }
                              },
                              "id": 1215,
                              "indexExpression": {
                                "id": 1214,
                                "name": "hashLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1206,
                                "src": "8762:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8756:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ApricotSwap_$569_storage",
                                "typeString": "struct TwoPartySwapApricot.ApricotSwap storage ref"
                              }
                            },
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "assetName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "8756:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1212,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "8750:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3058_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8750:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3058",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2719,
                      "src": "8750:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8750:110:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "8750:110:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1234,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8903:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8903:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1236,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "8932:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$560_$",
                            "typeString": "type(enum TwoPartySwapApricot.State)"
                          }
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetRedeemed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 557,
                        "src": "8932:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$560",
                          "typeString": "enum TwoPartySwapApricot.State"
                        }
                      ],
                      "id": 1233,
                      "name": "AssetRedeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "8876:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_State_$560_$returns$__$",
                        "typeString": "function (uint256,enum TwoPartySwapApricot.State)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8876:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "EmitStatement",
                  "src": "8871:90:1"
                }
              ]
            },
            "functionSelector": "b55587a9",
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1209,
                    "name": "hashLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1206,
                    "src": "8731:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1210,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1208,
                  "name": "canRedeemPremium",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 912,
                  "src": "8714:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "8714:26:1"
              }
            ],
            "name": "redeemPremium",
            "nameLocation": "8675:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1206,
                  "mutability": "mutable",
                  "name": "hashLock",
                  "nameLocation": "8697:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "8689:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8689:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8688:18:1"
            },
            "returnParameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8740:0:1"
            },
            "scope": 1242,
            "src": "8666:302:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1243,
        "src": "688:8282:1",
        "usedErrors": []
      }
    ],
    "src": "192:8778:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "1634637791871": {
      "events": {},
      "links": {},
      "address": "0x0B20DEf4002e84975f1429a42d0Ce8cF1B824eA0",
      "transactionHash": "0x341b4631182f135f30fe14ba1a29baf030e637e647f5288b2ebf80c3458c604b"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-19T14:27:39.637Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "AssetEscrowed(uint256,uint256,uint8)": {
        "notice": "Once Alice escrows her asset, we want to check that she escrowed the correct amount."
      },
      "AssetRedeemed(uint256,uint8)": {
        "notice": "If the swap succeeds, Bob will collect his asset."
      },
      "AssetRefunded(uint256,uint8)": {
        "notice": "If the swap fails, Alice can get her asset back after the timout deadline."
      },
      "PremiumDeposited(uint256,uint256,uint8)": {
        "notice": "Once Bob deposits his premium, we want to check that he deposited the correct amount."
      },
      "PremiumRedeemed(uint256,uint8)": {
        "notice": "If the swap fails, Alice will redeem Bob's premium after the timout deadline."
      },
      "SetUp(uint256,bytes32,address,address)": {
        "notice": "On setup, we need to know the hashlock and participants."
      }
    },
    "kind": "user",
    "methods": {
      "swaps(bytes32)": {
        "notice": "Mappings that store our swap details."
      }
    },
    "version": 1
  }
}